import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from "react";
import { useQuery } from "@tanstack/react-query";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Dialog, DialogContent, DialogHeader, DialogTitle } from "@/components/ui/dialog";
import { Input } from "@/components/ui/input";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Briefcase, FileText, Calculator, Pill, Shield, Clock, AlertTriangle, Target, Stethoscope, Activity, Heart, Users, Search, Filter, Star, Bookmark, Download, Upload, Settings, Bell, CheckCircle, XCircle, Info, Zap, Globe, Phone, Mail, MapPin, Calendar, Archive, TrendingUp, BarChart3, Database, Cloud, Lock, Truck, Radio, Battery, Gauge, Timer, ClipboardList, Save, Edit, Link, Eye, Play, Baby, Wind, Droplets, Flame, Brain, Plus } from "lucide-react";
import { useUserTier } from "@/hooks/useUserTier";
import { useLocation } from "wouter";
import ApgarCalculator from "@/components/apgar-calculator";
import PediatricDoseCalculator from "@/components/pediatric-dose-calculator";
import IVDripCalculator from "@/components/iv-drip-calculator";
import GlasgowComaCalculator from "@/components/glasgow-coma-calculator";
import CardiacOutputCalculator from "@/components/cardiac-output-calculator";
import BurnSurfaceCalculator from "@/components/burn-surface-calculator";
import OxygenTankCalculator from "@/components/oxygen-tank-calculator";
import BMICalculator from "@/components/bmi-calculator";
import ShockIndexCalculator from "@/components/shock-index-calculator";
import MAPCalculator from "@/components/map-calculator";
import PediatricWeightEstimator from "@/components/pediatric-weight-estimator";
import MinuteVentilationCalculator from "@/components/minute-ventilation-calculator";
import StrokeScaleCalculator from "@/components/stroke-scale-calculator";
import AnionGapCalculator from "@/components/anion-gap-calculator";
import ParklandFormulaCalculator from "@/components/parkland-formula-calculator";
export default function Pro() {
    const [selectedTab, setSelectedTab] = useState("overview");
    const [protocolFilter, setProtocolFilter] = useState("");
    const [medicationFilter, setMedicationFilter] = useState("");
    const [calculatorFilter, setCalculatorFilter] = useState("");
    const [selectedProtocol, setSelectedProtocol] = useState(null);
    const [selectedMedication, setSelectedMedication] = useState(null);
    const [selectedCalculator, setSelectedCalculator] = useState(null);
    // Calculator modal states
    const [showApgar, setShowApgar] = useState(false);
    const [showPediatricDose, setShowPediatricDose] = useState(false);
    const [showIVDrip, setShowIVDrip] = useState(false);
    const [showGlasgowComa, setShowGlasgowComa] = useState(false);
    const [showCardiacOutput, setShowCardiacOutput] = useState(false);
    const [showBurnSurface, setShowBurnSurface] = useState(false);
    const [showOxygenTank, setShowOxygenTank] = useState(false);
    const [showBMI, setShowBMI] = useState(false);
    const [showShockIndex, setShowShockIndex] = useState(false);
    const [showMAP, setShowMAP] = useState(false);
    const [showPediatricWeight, setShowPediatricWeight] = useState(false);
    const [showMinuteVentilation, setShowMinuteVentilation] = useState(false);
    const [showStrokeScale, setShowStrokeScale] = useState(false);
    const [showAnionGap, setShowAnionGap] = useState(false);
    const [showParklandFormula, setShowParklandFormula] = useState(false);
    const [showProtocolDetail, setShowProtocolDetail] = useState(false);
    const [showMedicationDetail, setShowMedicationDetail] = useState(false);
    const [showProtocolUpload, setShowProtocolUpload] = useState(false);
    const [showProtocolSearch, setShowProtocolSearch] = useState(false);
    const [showEmergencyContacts, setShowEmergencyContacts] = useState(false);
    const [showEquipmentChecklist, setShowEquipmentChecklist] = useState(false);
    const [showBatteryStatus, setShowBatteryStatus] = useState(false);
    const [showQualityMetrics, setShowQualityMetrics] = useState(false);
    const [showLocationServices, setShowLocationServices] = useState(false);
    const [showFieldReferences, setShowFieldReferences] = useState(false);
    const [showProtocolUploadModal, setShowProtocolUploadModal] = useState(false);
    const [showIncidentReports, setShowIncidentReports] = useState(false);
    const [showAlertSystem, setShowAlertSystem] = useState(false);
    const [showShiftScheduler, setShowShiftScheduler] = useState(false);
    const [showMaintenanceLog, setShowMaintenanceLog] = useState(false);
    const [showDataSync, setShowDataSync] = useState(false);
    const [showExportProtocols, setShowExportProtocols] = useState(false);
    const [showCaseArchives, setShowCaseArchives] = useState(false);
    const [showPerformanceAnalytics, setShowPerformanceAnalytics] = useState(false);
    const [showPerformanceTrends, setShowPerformanceTrends] = useState(false);
    const [showComplianceTracking, setShowComplianceTracking] = useState(false);
    const { userTier, switchTier, isBasic, isPro } = useUserTier();
    const [, setLocation] = useLocation();
    // Fetch professional protocols
    const { data: protocols } = useQuery({
        queryKey: ["/api/protocols"],
        enabled: isPro,
    });
    // Fetch medications
    const { data: medications } = useQuery({
        queryKey: ["/api/medications"],
        enabled: isPro,
    });
    // Fetch calculator results history
    const { data: calculatorResults } = useQuery({
        queryKey: ["/api/calculator-results"],
        enabled: isPro,
    });
    // Filter functions
    const filteredProtocols = protocols?.filter((protocol) => protocol.name.toLowerCase().includes(protocolFilter.toLowerCase()) ||
        protocol.category?.toLowerCase().includes(protocolFilter.toLowerCase())) || [];
    const filteredMedications = medications?.filter((medication) => medication.name.toLowerCase().includes(medicationFilter.toLowerCase()) ||
        medication.category?.toLowerCase().includes(medicationFilter.toLowerCase())) || [];
    const professionalCalculators = [
        {
            id: "cardiac-output",
            name: "Cardiac Output Calculator",
            description: "Calculate cardiac output using heart rate and stroke volume",
            category: "Cardiovascular",
            icon: _jsx(Heart, { className: "h-5 w-5" }),
            color: "bg-red-500"
        },
        {
            id: "iv-drip-rate",
            name: "IV Drip Rate Calculator",
            description: "Calculate IV drip rates for accurate medication delivery",
            category: "Medication",
            icon: _jsx(Activity, { className: "h-5 w-5" }),
            color: "bg-blue-500"
        },
        {
            id: "burn-surface-area",
            name: "Burn Surface Area Calculator",
            description: "Calculate burn surface area using Rule of Nines",
            category: "Trauma",
            icon: _jsx(Shield, { className: "h-5 w-5" }),
            color: "bg-orange-500"
        },
        {
            id: "glasgow-coma-scale",
            name: "Glasgow Coma Scale",
            description: "Assess neurological function and consciousness level",
            category: "Neurological",
            icon: _jsx(Stethoscope, { className: "h-5 w-5" }),
            color: "bg-purple-500"
        },
        {
            id: "oxygen-tank-duration",
            name: "Oxygen Tank Duration",
            description: "Calculate remaining oxygen supply duration",
            category: "Respiratory",
            icon: _jsx(Gauge, { className: "h-5 w-5" }),
            color: "bg-green-500"
        },
        {
            id: "pediatric-dose",
            name: "Pediatric Dose Calculator",
            description: "Weight-based medication dosing for pediatric patients",
            category: "Pediatrics",
            icon: _jsx(Calculator, { className: "h-5 w-5" }),
            color: "bg-pink-500"
        },
        {
            id: "apgar",
            name: "APGAR Score Calculator",
            description: "Assess newborn condition immediately after birth",
            category: "Pediatrics",
            icon: _jsx(Baby, { className: "h-5 w-5" }),
            color: "bg-blue-500"
        },
        {
            id: "bmi",
            name: "BMI Calculator",
            description: "Calculate body mass index and health classification",
            category: "General",
            icon: _jsx(Calculator, { className: "h-5 w-5" }),
            color: "bg-teal-500"
        },
        {
            id: "shock-index",
            name: "Shock Index Calculator",
            description: "Assess shock severity using pulse and systolic BP",
            category: "Trauma",
            icon: _jsx(Heart, { className: "h-5 w-5" }),
            color: "bg-red-600"
        },
        {
            id: "map",
            name: "MAP Calculator",
            description: "Mean Arterial Pressure for perfusion assessment",
            category: "Cardiovascular",
            icon: _jsx(Activity, { className: "h-5 w-5" }),
            color: "bg-blue-600"
        },
        {
            id: "pediatric-weight",
            name: "Pediatric Weight Estimator",
            description: "Estimate weight using age-based formulas",
            category: "Pediatrics",
            icon: _jsx(Baby, { className: "h-5 w-5" }),
            color: "bg-pink-600"
        },
        {
            id: "minute-ventilation",
            name: "Minute Ventilation Calculator",
            description: "Calculate tidal volume Ã— respiratory rate",
            category: "Respiratory",
            icon: _jsx(Wind, { className: "h-5 w-5" }),
            color: "bg-green-600"
        },
        {
            id: "stroke-scale",
            name: "Stroke Scale Calculator",
            description: "FAST/BE-FAST stroke assessment tool",
            category: "Neurological",
            icon: _jsx(Brain, { className: "h-5 w-5" }),
            color: "bg-purple-600"
        },
        {
            id: "anion-gap",
            name: "Anion Gap Calculator",
            description: "Assess acid-base disorders and DKA",
            category: "Metabolic",
            icon: _jsx(Droplets, { className: "h-5 w-5" }),
            color: "bg-indigo-600"
        },
        {
            id: "parkland-formula",
            name: "Parkland Formula Calculator",
            description: "Fluid resuscitation for burn patients",
            category: "Burns",
            icon: _jsx(Flame, { className: "h-5 w-5" }),
            color: "bg-orange-600"
        }
    ];
    const filteredCalculators = professionalCalculators.filter((calc) => calc.name.toLowerCase().includes(calculatorFilter.toLowerCase()) ||
        calc.category.toLowerCase().includes(calculatorFilter.toLowerCase()));
    // Calculator click handler
    const handleCalculatorClick = (calculatorId) => {
        switch (calculatorId) {
            case "cardiac-output":
                setShowCardiacOutput(true);
                break;
            case "iv-drip-rate":
                setShowIVDrip(true);
                break;
            case "burn-surface-area":
                setShowBurnSurface(true);
                break;
            case "glasgow-coma-scale":
                setShowGlasgowComa(true);
                break;
            case "oxygen-tank-duration":
                setShowOxygenTank(true);
                break;
            case "pediatric-dose":
                setShowPediatricDose(true);
                break;
            case "apgar":
                setShowApgar(true);
                break;
            case "bmi":
                setShowBMI(true);
                break;
            case "shock-index":
                setShowShockIndex(true);
                break;
            case "map":
                setShowMAP(true);
                break;
            case "pediatric-weight":
                setShowPediatricWeight(true);
                break;
            case "minute-ventilation":
                setShowMinuteVentilation(true);
                break;
            case "stroke-scale":
                setShowStrokeScale(true);
                break;
            case "anion-gap":
                setShowAnionGap(true);
                break;
            case "parkland-formula":
                setShowParklandFormula(true);
                break;
            default:
                console.warn(`Unknown calculator: ${calculatorId}`);
        }
    };
    // Field tool click handler
    const handleFieldToolClick = (tool) => {
        console.log(`Field tool clicked: ${tool}`);
        switch (tool) {
            case "protocol-upload":
                setShowProtocolUploadModal(true);
                break;
            case "export-protocols":
                setShowExportProtocols(true);
                break;
            case "edit-protocols":
                alert("Edit Protocols: Custom protocol editor will open in a new window");
                break;
            case "emergency-contacts":
                setShowEmergencyContacts(true);
                break;
            case "incident-reports":
                setShowIncidentReports(true);
                break;
            case "alert-system":
                setShowAlertSystem(true);
                break;
            case "case-archives":
                setShowCaseArchives(true);
                break;
            case "performance-analytics":
                setShowPerformanceAnalytics(true);
                break;
            case "data-sync":
                setShowDataSync(true);
                break;
            case "equipment-checklist":
                setShowEquipmentChecklist(true);
                break;
            case "battery-status":
                setShowBatteryStatus(true);
                break;
            case "maintenance-log":
                setShowMaintenanceLog(true);
                break;
            case "quality-metrics":
                setShowQualityMetrics(true);
                break;
            case "performance-trends":
                setShowPerformanceTrends(true);
                break;
            case "compliance-tracking":
                setShowComplianceTracking(true);
                break;
            case "location-services":
                setShowLocationServices(true);
                break;
            case "shift-scheduler":
                setShowShiftScheduler(true);
                break;
            case "field-references":
                setShowFieldReferences(true);
                break;
            default:
                alert(`${tool} feature will be available in a future update`);
                break;
        }
    };
    // Professional dashboard stats
    const dashboardStats = [
        {
            title: "Active Protocols",
            value: protocols?.length || 0,
            icon: _jsx(FileText, { className: "h-8 w-8" }),
            color: "bg-blue-500",
            change: "+2 this week"
        },
        {
            title: "Medications",
            value: medications?.length || 0,
            icon: _jsx(Pill, { className: "h-8 w-8" }),
            color: "bg-green-500",
            change: "Updated today"
        },
        {
            title: "Calculations",
            value: calculatorResults?.length || 0,
            icon: _jsx(Calculator, { className: "h-8 w-8" }),
            color: "bg-purple-500",
            change: "+5 today"
        },
        {
            title: "Field Tools",
            value: 15,
            icon: _jsx(Briefcase, { className: "h-8 w-8" }),
            color: "bg-orange-500",
            change: "All active"
        }
    ];
    const quickActions = [
        {
            title: "Emergency Protocols",
            description: "Access critical care protocols instantly",
            icon: _jsx(AlertTriangle, { className: "h-6 w-6" }),
            color: "bg-red-500 hover:bg-red-600",
            action: () => setSelectedTab("protocols")
        },
        {
            title: "Medication Lookup",
            description: "Quick drug reference and dosing",
            icon: _jsx(Pill, { className: "h-6 w-6" }),
            color: "bg-blue-500 hover:bg-blue-600",
            action: () => setSelectedTab("medications")
        },
        {
            title: "Field Calculators",
            description: "Essential medical calculations",
            icon: _jsx(Calculator, { className: "h-6 w-6" }),
            color: "bg-green-500 hover:bg-green-600",
            action: () => setSelectedTab("calculators")
        },
        {
            title: "Protocol Upload",
            description: "Add custom protocols",
            icon: _jsx(Upload, { className: "h-6 w-6" }),
            color: "bg-purple-500 hover:bg-purple-600",
            action: () => setSelectedTab("protocols")
        }
    ];
    const recentActivities = [
        {
            action: "Calculated IV drip rate",
            time: "5 minutes ago",
            icon: _jsx(Activity, { className: "h-4 w-4" }),
            color: "text-blue-500"
        },
        {
            action: "Accessed cardiac arrest protocol",
            time: "12 minutes ago",
            icon: _jsx(Heart, { className: "h-4 w-4" }),
            color: "text-red-500"
        },
        {
            action: "Looked up epinephrine dosing",
            time: "25 minutes ago",
            icon: _jsx(Pill, { className: "h-4 w-4" }),
            color: "text-green-500"
        },
        {
            action: "Updated custom protocol",
            time: "1 hour ago",
            icon: _jsx(FileText, { className: "h-4 w-4" }),
            color: "text-purple-500"
        }
    ];
    // If user is not in Pro mode, show upgrade prompt
    if (!isPro) {
        return (_jsx("div", { className: "min-h-screen bg-black", style: { backgroundColor: '#000000' }, children: _jsx("div", { className: "max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8", children: _jsx("div", { className: "text-center", children: _jsxs("div", { className: "max-w-md mx-auto", children: [_jsx(Lock, { className: "h-16 w-16 mx-auto text-gray-400 mb-4" }), _jsx("h2", { className: "text-2xl font-bold text-white mb-2", children: "Pro Mode Required" }), _jsx("p", { className: "text-gray-300 mb-6", children: "This page contains professional field tools. Switch to Pro mode to access advanced features." }), _jsxs(Button, { onClick: () => {
                                    switchTier('pro');
                                    setLocation('/pro');
                                }, className: "bg-secondary text-secondary-foreground hover:bg-secondary/90", children: [_jsx(Briefcase, { className: "h-4 w-4 mr-2" }), "Switch to Pro Mode"] })] }) }) }) }));
    }
    return (_jsxs("div", { className: "min-h-screen bg-black", style: { backgroundColor: '#000000' }, children: [_jsxs("div", { className: "max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8 text-white", children: [_jsxs("div", { className: "mb-8", children: [_jsx("h1", { className: "text-3xl font-bold text-white mb-2", children: "Pro Field Tools" }), _jsx("p", { className: "text-gray-300", children: "Professional EMS tools for field use - No educational content, just essential field tools" }), _jsxs("div", { className: "mt-4 flex items-center gap-2", children: [_jsxs(Badge, { className: "bg-secondary text-secondary-foreground", children: [_jsx(Briefcase, { className: "h-3 w-3 mr-1" }), "Pro Mode Active"] }), _jsxs(Button, { size: "sm", className: "bg-gray-700 text-white hover:bg-gray-600 border-gray-600", onClick: () => {
                                            switchTier('basic');
                                            setLocation('/');
                                        }, children: [_jsx(Users, { className: "h-3 w-3 mr-1" }), "Switch to Basic"] })] })] }), _jsxs(Tabs, { value: selectedTab, onValueChange: setSelectedTab, children: [_jsxs(TabsList, { className: "grid w-full grid-cols-5 bg-gray-800 border-gray-700", children: [_jsx(TabsTrigger, { value: "overview", className: "text-white data-[state=active]:bg-gray-700 data-[state=active]:text-white", children: "Overview" }), _jsx(TabsTrigger, { value: "protocols", className: "text-white data-[state=active]:bg-gray-700 data-[state=active]:text-white", children: "Protocols" }), _jsx(TabsTrigger, { value: "medications", className: "text-white data-[state=active]:bg-gray-700 data-[state=active]:text-white", children: "Medications" }), _jsx(TabsTrigger, { value: "calculators", className: "text-white data-[state=active]:bg-gray-700 data-[state=active]:text-white", children: "Calculators" }), _jsx(TabsTrigger, { value: "tools", className: "text-white data-[state=active]:bg-gray-700 data-[state=active]:text-white", children: "Field Tools" })] }), _jsxs(TabsContent, { value: "overview", className: "space-y-6", children: [_jsx("div", { className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6", children: dashboardStats.map((stat, index) => (_jsx(Card, { className: "bg-gray-800 border-gray-700", children: _jsx(CardContent, { className: "p-6", children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("p", { className: "text-sm font-medium text-gray-400", children: stat.title }), _jsx("p", { className: "text-2xl font-bold text-white", children: stat.value }), _jsx("p", { className: "text-xs text-gray-400", children: stat.change })] }), _jsx("div", { className: `${stat.color} p-3 rounded-lg text-white`, children: stat.icon })] }) }) }, index))) }), _jsxs(Card, { className: "bg-gray-800 border-gray-700", children: [_jsx(CardHeader, { children: _jsxs(CardTitle, { className: "flex items-center text-white", children: [_jsx(Zap, { className: "h-5 w-5 mr-2" }), "Quick Actions"] }) }), _jsx(CardContent, { children: _jsx("div", { className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4", children: quickActions.map((action, index) => (_jsxs(Button, { onClick: action.action, className: `${action.color} text-white h-24 flex flex-col items-center justify-center space-y-2`, children: [action.icon, _jsxs("div", { className: "text-center", children: [_jsx("div", { className: "font-semibold text-sm", children: action.title }), _jsx("div", { className: "text-xs opacity-90", children: action.description })] })] }, index))) }) })] }), _jsxs(Card, { className: "bg-gray-800 border-gray-700", children: [_jsx(CardHeader, { children: _jsxs(CardTitle, { className: "flex items-center text-white", children: [_jsx(Clock, { className: "h-5 w-5 mr-2" }), "Recent Activities"] }) }), _jsx(CardContent, { children: _jsx("div", { className: "space-y-4", children: recentActivities.map((activity, index) => (_jsxs("div", { className: "flex items-center space-x-4", children: [_jsx("div", { className: `${activity.color}`, children: activity.icon }), _jsxs("div", { className: "flex-1", children: [_jsx("p", { className: "text-sm font-medium text-white", children: activity.action }), _jsx("p", { className: "text-xs text-gray-400", children: activity.time })] })] }, index))) }) })] })] }), _jsx(TabsContent, { value: "protocols", className: "space-y-6", children: _jsxs(Card, { className: "bg-gray-800 border-gray-700", children: [_jsxs(CardHeader, { children: [_jsxs(CardTitle, { className: "flex items-center text-white", children: [_jsx(FileText, { className: "h-5 w-5 mr-2" }), "Professional Protocols"] }), _jsxs("div", { className: "flex items-center space-x-2", children: [_jsx(Search, { className: "h-4 w-4 text-gray-400" }), _jsx(Input, { placeholder: "Search protocols...", value: protocolFilter, onChange: (e) => setProtocolFilter(e.target.value), className: "max-w-sm bg-gray-700 border-gray-600 text-white placeholder-gray-400" }), _jsxs(Button, { size: "sm", variant: "outline", className: "border-gray-600 text-white hover:bg-gray-700", children: [_jsx(Filter, { className: "h-4 w-4 mr-2" }), "Filter"] })] })] }), _jsx(CardContent, { className: "p-0", children: _jsx("div", { className: "overflow-x-auto", children: _jsxs("table", { className: "w-full", children: [_jsx("thead", { className: "bg-gray-700 border-b border-gray-600", children: _jsxs("tr", { children: [_jsx("th", { className: "text-left p-4 font-medium text-white", children: "Protocol" }), _jsx("th", { className: "text-left p-4 font-medium text-white", children: "Category" }), _jsx("th", { className: "text-left p-4 font-medium text-white", children: "State" }), _jsx("th", { className: "text-left p-4 font-medium text-white", children: "Updated" }), _jsx("th", { className: "text-center p-4 font-medium text-white", children: "Actions" })] }) }), _jsx("tbody", { children: filteredProtocols.map((protocol) => (_jsxs("tr", { className: "border-b border-gray-600 hover:bg-gray-700/50 transition-colors", children: [_jsx("td", { className: "p-4", children: _jsxs("div", { className: "flex flex-col", children: [_jsx("div", { className: "font-medium text-white mb-1", children: protocol.name }), _jsxs("div", { className: "flex items-center space-x-2 mb-1", children: [protocol.scope && (_jsx(Badge, { variant: "secondary", className: "text-xs bg-gray-600 text-gray-300", children: protocol.scope })), protocol.ageGroup && (_jsx(Badge, { variant: "outline", className: "text-xs border-gray-500 text-gray-300", children: protocol.ageGroup.replace('_', ' & ') }))] }), protocol.description && (_jsx("div", { className: "text-xs text-gray-400 line-clamp-2", children: protocol.description }))] }) }), _jsx("td", { className: "p-4", children: _jsx(Badge, { className: "bg-blue-600 text-white text-xs", children: protocol.category }) }), _jsx("td", { className: "p-4", children: _jsx(Badge, { variant: "outline", className: "text-xs border-gray-500 text-gray-300", children: protocol.state || "Nevada" }) }), _jsx("td", { className: "p-4 text-sm text-gray-400", children: new Date(protocol.createdAt).toLocaleDateString() }), _jsx("td", { className: "p-4", children: _jsxs("div", { className: "flex items-center justify-center space-x-2", children: [_jsx(Button, { size: "sm", variant: "ghost", className: "text-gray-400 hover:text-white hover:bg-gray-600", onClick: () => {
                                                                                        setSelectedProtocol(protocol);
                                                                                        setShowProtocolDetail(true);
                                                                                    }, children: _jsx(Eye, { className: "h-4 w-4" }) }), _jsx(Button, { size: "sm", variant: "ghost", className: "text-gray-400 hover:text-white hover:bg-gray-600", children: _jsx(Bookmark, { className: "h-4 w-4" }) })] }) })] }, protocol.id))) })] }) }) })] }) }), _jsx(TabsContent, { value: "medications", className: "space-y-6", children: _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsxs(CardTitle, { className: "flex items-center", children: [_jsx(Pill, { className: "h-5 w-5 mr-2" }), "Medication Reference"] }), _jsxs("div", { className: "flex items-center space-x-2", children: [_jsx(Search, { className: "h-4 w-4 text-muted-foreground" }), _jsx(Input, { placeholder: "Search medications...", value: medicationFilter, onChange: (e) => setMedicationFilter(e.target.value), className: "max-w-sm" }), _jsxs(Select, { children: [_jsx(SelectTrigger, { className: "w-[180px]", children: _jsx(SelectValue, { placeholder: "Filter by scope" }) }), _jsxs(SelectContent, { children: [_jsx(SelectItem, { value: "all", children: "All Scopes" }), _jsx(SelectItem, { value: "BLS", children: "BLS" }), _jsx(SelectItem, { value: "ALS", children: "ALS" }), _jsx(SelectItem, { value: "AEMT", children: "AEMT" }), _jsx(SelectItem, { value: "Paramedic", children: "Paramedic" })] })] })] })] }), _jsx(CardContent, { children: _jsx("div", { className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4", children: filteredMedications.map((medication) => (_jsxs(Card, { className: "hover:shadow-md transition-shadow", children: [_jsxs(CardHeader, { className: "pb-3", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsx(Badge, { variant: "outline", className: medication.scope === 'BLS' ? 'border-green-500 text-green-500' :
                                                                                medication.scope === 'ALS' ? 'border-blue-500 text-blue-500' :
                                                                                    medication.scope === 'AEMT' ? 'border-purple-500 text-purple-500' :
                                                                                        'border-red-500 text-red-500', children: medication.scope }), _jsx(Button, { size: "sm", variant: "ghost", children: _jsx(Star, { className: "h-4 w-4" }) })] }), _jsx(CardTitle, { className: "text-lg", children: medication.name }), _jsx("p", { className: "text-sm text-muted-foreground", children: medication.category })] }), _jsx(CardContent, { children: _jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "text-sm", children: [_jsx("span", { className: "font-medium", children: "Dosage:" }), _jsx("p", { className: "text-muted-foreground", children: medication.dosage })] }), _jsxs(Button, { className: "w-full bg-blue-600 text-white hover:bg-blue-700 hover:text-white", size: "sm", onClick: () => {
                                                                            setSelectedMedication(medication);
                                                                            setShowMedicationDetail(true);
                                                                        }, children: [_jsx(Eye, { className: "h-4 w-4 mr-2" }), "View Details"] })] }) })] }, medication.id))) }) })] }) }), _jsx(TabsContent, { value: "calculators", className: "space-y-6", children: _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsxs(CardTitle, { className: "flex items-center", children: [_jsx(Calculator, { className: "h-5 w-5 mr-2" }), "Field Calculators"] }), _jsxs("div", { className: "flex items-center space-x-2", children: [_jsx(Search, { className: "h-4 w-4 text-muted-foreground" }), _jsx(Input, { placeholder: "Search calculators...", value: calculatorFilter, onChange: (e) => setCalculatorFilter(e.target.value), className: "max-w-sm" })] })] }), _jsx(CardContent, { children: _jsx("div", { className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4", children: filteredCalculators.map((calculator) => (_jsxs(Card, { className: "hover:shadow-md transition-shadow", children: [_jsxs(CardHeader, { className: "pb-3", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsx(Badge, { variant: "outline", children: calculator.category }), _jsx("div", { className: `${calculator.color} p-2 rounded-lg text-white`, children: calculator.icon })] }), _jsx(CardTitle, { className: "text-lg", children: calculator.name }), _jsx("p", { className: "text-sm text-muted-foreground", children: calculator.description })] }), _jsx(CardContent, { children: _jsxs(Button, { className: "w-full bg-blue-600 text-white hover:bg-blue-700 hover:text-white", size: "sm", onClick: () => handleCalculatorClick(calculator.id), children: [_jsx(Play, { className: "h-4 w-4 mr-2" }), "Open Calculator"] }) })] }, calculator.id))) }) })] }) }), _jsx(TabsContent, { value: "tools", className: "space-y-6", children: _jsxs(Card, { className: "bg-gray-800 border-gray-700", children: [_jsxs(CardHeader, { children: [_jsxs(CardTitle, { className: "flex items-center text-white", children: [_jsx(Briefcase, { className: "h-5 w-5 mr-2" }), "Professional Field Tools"] }), _jsx("p", { className: "text-sm text-gray-300", children: "Advanced tools for field professionals" })] }), _jsx(CardContent, { children: _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6", children: [_jsxs(Card, { className: "bg-gray-800 border-gray-700", children: [_jsx(CardHeader, { children: _jsxs(CardTitle, { className: "flex items-center text-lg text-white", children: [_jsx(FileText, { className: "h-5 w-5 mr-2" }), "Protocol Management"] }) }), _jsxs(CardContent, { className: "space-y-4", children: [_jsxs(Button, { className: "w-full bg-gray-700 text-white hover:bg-gray-600 border-gray-600", onClick: () => handleFieldToolClick("protocol-upload"), children: [_jsx(Upload, { className: "h-4 w-4 mr-2" }), "Upload Protocol"] }), _jsxs(Button, { className: "w-full bg-gray-700 text-white hover:bg-gray-600 border-gray-600", onClick: () => handleFieldToolClick("export-protocols"), children: [_jsx(Download, { className: "h-4 w-4 mr-2" }), "Export Protocols"] }), _jsxs(Button, { className: "w-full bg-gray-700 text-white hover:bg-gray-600 border-gray-600", onClick: () => handleFieldToolClick("edit-protocols"), children: [_jsx(Edit, { className: "h-4 w-4 mr-2" }), "Edit Custom Protocols"] })] })] }), _jsxs(Card, { className: "bg-gray-800 border-gray-700", children: [_jsx(CardHeader, { children: _jsxs(CardTitle, { className: "flex items-center text-lg text-white", children: [_jsx(Radio, { className: "h-5 w-5 mr-2" }), "Communication"] }) }), _jsxs(CardContent, { className: "space-y-4", children: [_jsxs(Button, { className: "w-full bg-gray-700 text-white hover:bg-gray-600 border-gray-600", onClick: () => handleFieldToolClick("emergency-contacts"), children: [_jsx(Phone, { className: "h-4 w-4 mr-2" }), "Emergency Contacts"] }), _jsxs(Button, { className: "w-full bg-gray-700 text-white hover:bg-gray-600 border-gray-600", onClick: () => handleFieldToolClick("incident-reports"), children: [_jsx(Mail, { className: "h-4 w-4 mr-2" }), "Incident Reports"] }), _jsxs(Button, { className: "w-full bg-gray-700 text-white hover:bg-gray-600 border-gray-600", onClick: () => handleFieldToolClick("alert-system"), children: [_jsx(Bell, { className: "h-4 w-4 mr-2" }), "Alert System"] })] })] }), _jsxs(Card, { className: "bg-gray-800 border-gray-700", children: [_jsx(CardHeader, { children: _jsxs(CardTitle, { className: "flex items-center text-lg text-white", children: [_jsx(Database, { className: "h-5 w-5 mr-2" }), "Data Management"] }) }), _jsxs(CardContent, { className: "space-y-4", children: [_jsxs(Button, { className: "w-full bg-gray-700 text-white hover:bg-gray-600 border-gray-600", onClick: () => handleFieldToolClick("case-archives"), children: [_jsx(Archive, { className: "h-4 w-4 mr-2" }), "Case Archives"] }), _jsxs(Button, { className: "w-full bg-gray-700 text-white hover:bg-gray-600 border-gray-600", onClick: () => handleFieldToolClick("performance-analytics"), children: [_jsx(BarChart3, { className: "h-4 w-4 mr-2" }), "Performance Analytics"] }), _jsxs(Button, { className: "w-full bg-gray-700 text-white hover:bg-gray-600 border-gray-600", onClick: () => handleFieldToolClick("data-sync"), children: [_jsx(Cloud, { className: "h-4 w-4 mr-2" }), "Cloud Sync"] })] })] }), _jsxs(Card, { className: "bg-gray-800 border-gray-700", children: [_jsx(CardHeader, { children: _jsxs(CardTitle, { className: "flex items-center text-lg text-white", children: [_jsx(Truck, { className: "h-5 w-5 mr-2" }), "Equipment Tracking"] }) }), _jsxs(CardContent, { className: "space-y-4", children: [_jsxs(Button, { className: "w-full bg-gray-700 text-white hover:bg-gray-600 border-gray-600", onClick: () => handleFieldToolClick("equipment-checklist"), children: [_jsx(ClipboardList, { className: "h-4 w-4 mr-2" }), "Equipment Checklist"] }), _jsxs(Button, { className: "w-full bg-gray-700 text-white hover:bg-gray-600 border-gray-600", onClick: () => handleFieldToolClick("battery-status"), children: [_jsx(Battery, { className: "h-4 w-4 mr-2" }), "Battery Status"] }), _jsxs(Button, { className: "w-full bg-gray-700 text-white hover:bg-gray-600 border-gray-600", onClick: () => handleFieldToolClick("maintenance-log"), children: [_jsx(Settings, { className: "h-4 w-4 mr-2" }), "Maintenance Log"] })] })] }), _jsxs(Card, { className: "bg-gray-800 border-gray-700", children: [_jsx(CardHeader, { children: _jsxs(CardTitle, { className: "flex items-center text-lg text-white", children: [_jsx(Shield, { className: "h-5 w-5 mr-2" }), "Quality Assurance"] }) }), _jsxs(CardContent, { className: "space-y-4", children: [_jsxs(Button, { className: "w-full bg-gray-700 text-white hover:bg-gray-600 border-gray-600", onClick: () => handleFieldToolClick("quality-metrics"), children: [_jsx(CheckCircle, { className: "h-4 w-4 mr-2" }), "Quality Metrics"] }), _jsxs(Button, { className: "w-full bg-gray-700 text-white hover:bg-gray-600 border-gray-600", onClick: () => handleFieldToolClick("performance-trends"), children: [_jsx(TrendingUp, { className: "h-4 w-4 mr-2" }), "Performance Trends"] }), _jsxs(Button, { className: "w-full bg-gray-700 text-white hover:bg-gray-600 border-gray-600", onClick: () => handleFieldToolClick("compliance-tracking"), children: [_jsx(Target, { className: "h-4 w-4 mr-2" }), "Compliance Tracking"] })] })] }), _jsxs(Card, { className: "bg-gray-800 border-gray-700", children: [_jsx(CardHeader, { children: _jsxs(CardTitle, { className: "flex items-center text-lg text-white", children: [_jsx(Globe, { className: "h-5 w-5 mr-2" }), "Reference Tools"] }) }), _jsxs(CardContent, { className: "space-y-4", children: [_jsxs(Button, { className: "w-full bg-gray-700 text-white hover:bg-gray-600 border-gray-600", onClick: () => handleFieldToolClick("location-services"), children: [_jsx(MapPin, { className: "h-4 w-4 mr-2" }), "Location Services"] }), _jsxs(Button, { className: "w-full bg-gray-700 text-white hover:bg-gray-600 border-gray-600", onClick: () => handleFieldToolClick("shift-scheduler"), children: [_jsx(Calendar, { className: "h-4 w-4 mr-2" }), "Shift Scheduler"] }), _jsxs(Button, { className: "w-full bg-gray-700 text-white hover:bg-gray-600 border-gray-600", onClick: () => handleFieldToolClick("field-references"), children: [_jsx(Info, { className: "h-4 w-4 mr-2" }), "Field References"] })] })] })] }) })] }) })] })] }), _jsx(ApgarCalculator, { open: showApgar, onOpenChange: setShowApgar }), _jsx(PediatricDoseCalculator, { open: showPediatricDose, onOpenChange: setShowPediatricDose }), _jsx(IVDripCalculator, { open: showIVDrip, onOpenChange: setShowIVDrip }), _jsx(GlasgowComaCalculator, { open: showGlasgowComa, onOpenChange: setShowGlasgowComa }), _jsx(CardiacOutputCalculator, { open: showCardiacOutput, onOpenChange: setShowCardiacOutput }), _jsx(BurnSurfaceCalculator, { open: showBurnSurface, onOpenChange: setShowBurnSurface }), _jsx(OxygenTankCalculator, { open: showOxygenTank, onOpenChange: setShowOxygenTank }), _jsx(BMICalculator, { open: showBMI, onOpenChange: setShowBMI }), _jsx(ShockIndexCalculator, { open: showShockIndex, onOpenChange: setShowShockIndex }), _jsx(MAPCalculator, { open: showMAP, onOpenChange: setShowMAP }), _jsx(PediatricWeightEstimator, { open: showPediatricWeight, onOpenChange: setShowPediatricWeight }), _jsx(MinuteVentilationCalculator, { open: showMinuteVentilation, onOpenChange: setShowMinuteVentilation }), _jsx(StrokeScaleCalculator, { open: showStrokeScale, onOpenChange: setShowStrokeScale }), _jsx(AnionGapCalculator, { open: showAnionGap, onOpenChange: setShowAnionGap }), _jsx(ParklandFormulaCalculator, { open: showParklandFormula, onOpenChange: setShowParklandFormula }), selectedProtocol && (_jsx(Dialog, { open: showProtocolDetail, onOpenChange: setShowProtocolDetail, children: _jsxs(DialogContent, { className: "max-w-4xl max-h-[80vh] overflow-y-auto bg-gray-800 border-gray-700 text-white", children: [_jsx(DialogHeader, { children: _jsx(DialogTitle, { className: "text-white text-xl", children: selectedProtocol.name }) }), _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "flex items-center space-x-4", children: [_jsx(Badge, { className: "bg-blue-600 text-white", children: selectedProtocol.category }), _jsx(Badge, { variant: "outline", className: "border-gray-500 text-gray-300", children: selectedProtocol.state || "Nevada" }), selectedProtocol.scope && (_jsx(Badge, { variant: "secondary", className: "bg-gray-600 text-gray-300", children: selectedProtocol.scope }))] }), _jsxs("div", { className: "bg-gray-700 rounded-lg p-4", children: [_jsx("h3", { className: "font-semibold text-white mb-2", children: "Protocol Details" }), selectedProtocol.description && (_jsx("p", { className: "text-gray-300 mb-4", children: selectedProtocol.description })), selectedProtocol.content && (_jsx("div", { className: "prose prose-invert max-w-none", children: _jsx("pre", { className: "whitespace-pre-wrap text-gray-300 text-sm", children: selectedProtocol.content }) })), !selectedProtocol.content && !selectedProtocol.description && (_jsx("p", { className: "text-gray-400 italic", children: "No detailed content available for this protocol." }))] }), _jsxs("div", { className: "flex justify-end space-x-2", children: [_jsxs(Button, { variant: "outline", className: "border-gray-600 text-gray-300 hover:bg-gray-700 hover:text-white bg-transparent", children: [_jsx(Download, { className: "h-4 w-4 mr-2" }), "Download"] }), _jsxs(Button, { variant: "outline", className: "border-gray-600 text-gray-300 hover:bg-gray-700 hover:text-white bg-transparent", children: [_jsx(Bookmark, { className: "h-4 w-4 mr-2" }), "Bookmark"] }), _jsx(Button, { className: "bg-blue-600 text-white hover:bg-blue-700 hover:text-white", onClick: () => setShowProtocolDetail(false), children: "Close" })] })] })] }) })), selectedMedication && (_jsx(Dialog, { open: showMedicationDetail, onOpenChange: setShowMedicationDetail, children: _jsxs(DialogContent, { className: "max-w-4xl max-h-[80vh] overflow-y-auto bg-gray-800 border-gray-700 text-white", children: [_jsx(DialogHeader, { children: _jsx(DialogTitle, { className: "text-white text-xl", children: selectedMedication.name }) }), _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "flex items-center space-x-4", children: [_jsx(Badge, { variant: "outline", className: selectedMedication.scope === 'BLS' ? 'border-green-500 text-green-500' :
                                                selectedMedication.scope === 'ALS' ? 'border-blue-500 text-blue-500' :
                                                    selectedMedication.scope === 'AEMT' ? 'border-purple-500 text-purple-500' :
                                                        'border-red-500 text-red-500', children: selectedMedication.scope }), _jsx(Badge, { className: "bg-blue-600 text-white", children: selectedMedication.category }), selectedMedication.class && (_jsx(Badge, { variant: "secondary", className: "bg-gray-600 text-gray-300", children: selectedMedication.class }))] }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-4", children: [_jsxs("div", { className: "bg-gray-700 rounded-lg p-4", children: [_jsx("h3", { className: "font-semibold text-white mb-2", children: "Dosage & Administration" }), _jsx("p", { className: "text-gray-300 text-sm", children: selectedMedication.dosage || 'No dosage information available' }), selectedMedication.route && (_jsxs("div", { className: "mt-2", children: [_jsx("span", { className: "text-gray-400 text-sm", children: "Route: " }), _jsx("span", { className: "text-gray-300 text-sm", children: selectedMedication.route })] }))] }), _jsxs("div", { className: "bg-gray-700 rounded-lg p-4", children: [_jsx("h3", { className: "font-semibold text-white mb-2", children: "Indications" }), _jsx("p", { className: "text-gray-300 text-sm", children: selectedMedication.indications || 'No indication information available' })] }), _jsxs("div", { className: "bg-gray-700 rounded-lg p-4", children: [_jsx("h3", { className: "font-semibold text-white mb-2", children: "Contraindications" }), _jsx("p", { className: "text-gray-300 text-sm", children: selectedMedication.contraindications || 'No contraindication information available' })] }), _jsxs("div", { className: "bg-gray-700 rounded-lg p-4", children: [_jsx("h3", { className: "font-semibold text-white mb-2", children: "Side Effects" }), _jsx("p", { className: "text-gray-300 text-sm", children: selectedMedication.sideEffects || 'No side effect information available' })] })] }), selectedMedication.notes && (_jsxs("div", { className: "bg-gray-700 rounded-lg p-4", children: [_jsx("h3", { className: "font-semibold text-white mb-2", children: "Additional Notes" }), _jsx("p", { className: "text-gray-300 text-sm", children: selectedMedication.notes })] })), _jsxs("div", { className: "flex justify-end space-x-2", children: [_jsxs(Button, { variant: "outline", className: "border-gray-600 text-gray-300 hover:bg-gray-700 hover:text-white bg-transparent", children: [_jsx(Star, { className: "h-4 w-4 mr-2" }), "Favorite"] }), _jsxs(Button, { variant: "outline", className: "border-gray-600 text-gray-300 hover:bg-gray-700 hover:text-white bg-transparent", children: [_jsx(Download, { className: "h-4 w-4 mr-2" }), "Export"] }), _jsx(Button, { className: "bg-blue-600 text-white hover:bg-blue-700 hover:text-white", onClick: () => setShowMedicationDetail(false), children: "Close" })] })] })] }) })), showEmergencyContacts && (_jsx(Dialog, { open: showEmergencyContacts, onOpenChange: setShowEmergencyContacts, children: _jsxs(DialogContent, { className: "bg-gray-800 text-white border-gray-700", children: [_jsx(DialogHeader, { children: _jsx(DialogTitle, { className: "text-white", children: "Emergency Contacts" }) }), _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "bg-gray-700 rounded-lg p-4", children: [_jsx("h3", { className: "font-semibold text-white mb-2", children: "Emergency Services" }), _jsx("p", { className: "text-gray-300", children: "911 (Emergency)" })] }), _jsxs("div", { className: "bg-gray-700 rounded-lg p-4", children: [_jsx("h3", { className: "font-semibold text-white mb-2", children: "Medical Control" }), _jsx("p", { className: "text-gray-300", children: "702-555-0123" })] }), _jsxs("div", { className: "bg-gray-700 rounded-lg p-4", children: [_jsx("h3", { className: "font-semibold text-white mb-2", children: "Poison Control" }), _jsx("p", { className: "text-gray-300", children: "1-800-222-1222" })] }), _jsxs("div", { className: "bg-gray-700 rounded-lg p-4", children: [_jsx("h3", { className: "font-semibold text-white mb-2", children: "Clark County Fire" }), _jsx("p", { className: "text-gray-300", children: "702-455-7332" })] }), _jsx("div", { className: "flex justify-end", children: _jsx(Button, { className: "bg-blue-600 text-white hover:bg-blue-700", onClick: () => setShowEmergencyContacts(false), children: "Close" }) })] })] }) })), showEquipmentChecklist && (_jsx(Dialog, { open: showEquipmentChecklist, onOpenChange: setShowEquipmentChecklist, children: _jsxs(DialogContent, { className: "bg-gray-800 text-white border-gray-700", children: [_jsx(DialogHeader, { children: _jsx(DialogTitle, { className: "text-white", children: "Equipment Checklist" }) }), _jsxs("div", { className: "space-y-4", children: [_jsx("div", { className: "bg-gray-700 rounded-lg p-4", children: _jsxs("div", { className: "flex items-center space-x-2", children: [_jsx(CheckCircle, { className: "h-5 w-5 text-green-500" }), _jsx("span", { className: "font-semibold text-white", children: "Defibrillator: Operational" })] }) }), _jsx("div", { className: "bg-gray-700 rounded-lg p-4", children: _jsxs("div", { className: "flex items-center space-x-2", children: [_jsx(CheckCircle, { className: "h-5 w-5 text-green-500" }), _jsx("span", { className: "font-semibold text-white", children: "Oxygen Tank: 2100 PSI" })] }) }), _jsx("div", { className: "bg-gray-700 rounded-lg p-4", children: _jsxs("div", { className: "flex items-center space-x-2", children: [_jsx(CheckCircle, { className: "h-5 w-5 text-green-500" }), _jsx("span", { className: "font-semibold text-white", children: "Medications: Checked" })] }) }), _jsx("div", { className: "bg-gray-700 rounded-lg p-4", children: _jsxs("div", { className: "flex items-center space-x-2", children: [_jsx(CheckCircle, { className: "h-5 w-5 text-green-500" }), _jsx("span", { className: "font-semibold text-white", children: "Airway Kit: Complete" })] }) }), _jsx("div", { className: "bg-gray-700 rounded-lg p-4", children: _jsxs("div", { className: "flex items-center space-x-2", children: [_jsx(CheckCircle, { className: "h-5 w-5 text-green-500" }), _jsx("span", { className: "font-semibold text-white", children: "Trauma Supplies: Stocked" })] }) }), _jsx("div", { className: "flex justify-end", children: _jsx(Button, { className: "bg-blue-600 text-white hover:bg-blue-700", onClick: () => setShowEquipmentChecklist(false), children: "Close" }) })] })] }) })), showBatteryStatus && (_jsx(Dialog, { open: showBatteryStatus, onOpenChange: setShowBatteryStatus, children: _jsxs(DialogContent, { className: "bg-gray-800 text-white border-gray-700", children: [_jsx(DialogHeader, { children: _jsx(DialogTitle, { className: "text-white", children: "Battery Status" }) }), _jsxs("div", { className: "space-y-4", children: [_jsx("div", { className: "bg-gray-700 rounded-lg p-4", children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsx("span", { className: "font-semibold text-white", children: "Monitor" }), _jsx("span", { className: "text-green-400", children: "85%" })] }) }), _jsx("div", { className: "bg-gray-700 rounded-lg p-4", children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsx("span", { className: "font-semibold text-white", children: "Defibrillator" }), _jsx("span", { className: "text-green-400", children: "92%" })] }) }), _jsx("div", { className: "bg-gray-700 rounded-lg p-4", children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsx("span", { className: "font-semibold text-white", children: "Suction Unit" }), _jsx("span", { className: "text-yellow-400", children: "78%" })] }) }), _jsx("div", { className: "bg-gray-700 rounded-lg p-4", children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsx("span", { className: "font-semibold text-white", children: "Radio" }), _jsx("span", { className: "text-green-400", children: "91%" })] }) }), _jsx("div", { className: "bg-gray-700 rounded-lg p-4", children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsx("span", { className: "font-semibold text-white", children: "Tablet" }), _jsx("span", { className: "text-yellow-400", children: "67%" })] }) }), _jsx("div", { className: "flex justify-end", children: _jsx(Button, { className: "bg-blue-600 text-white hover:bg-blue-700", onClick: () => setShowBatteryStatus(false), children: "Close" }) })] })] }) })), showQualityMetrics && (_jsx(Dialog, { open: showQualityMetrics, onOpenChange: setShowQualityMetrics, children: _jsxs(DialogContent, { className: "bg-gray-800 text-white border-gray-700", children: [_jsx(DialogHeader, { children: _jsx(DialogTitle, { className: "text-white", children: "Quality Metrics" }) }), _jsxs("div", { className: "space-y-4", children: [_jsx("div", { className: "bg-gray-700 rounded-lg p-4", children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsx("span", { className: "font-semibold text-white", children: "Response Time Average" }), _jsx("span", { className: "text-green-400", children: "8.5 min" })] }) }), _jsx("div", { className: "bg-gray-700 rounded-lg p-4", children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsx("span", { className: "font-semibold text-white", children: "Patient Satisfaction" }), _jsx("span", { className: "text-green-400", children: "94%" })] }) }), _jsx("div", { className: "bg-gray-700 rounded-lg p-4", children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsx("span", { className: "font-semibold text-white", children: "Protocol Compliance" }), _jsx("span", { className: "text-green-400", children: "98%" })] }) }), _jsx("div", { className: "bg-gray-700 rounded-lg p-4", children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsx("span", { className: "font-semibold text-white", children: "Equipment Uptime" }), _jsx("span", { className: "text-green-400", children: "99.2%" })] }) }), _jsx("div", { className: "flex justify-end", children: _jsx(Button, { className: "bg-blue-600 text-white hover:bg-blue-700", onClick: () => setShowQualityMetrics(false), children: "Close" }) })] })] }) })), showLocationServices && (_jsx(Dialog, { open: showLocationServices, onOpenChange: setShowLocationServices, children: _jsxs(DialogContent, { className: "bg-gray-800 text-white border-gray-700", children: [_jsx(DialogHeader, { children: _jsx(DialogTitle, { className: "text-white", children: "Location Services" }) }), _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "bg-gray-700 rounded-lg p-4", children: [_jsx("h3", { className: "font-semibold text-white mb-2", children: "GPS Status" }), _jsx("p", { className: "text-green-400", children: "Active" })] }), _jsxs("div", { className: "bg-gray-700 rounded-lg p-4", children: [_jsx("h3", { className: "font-semibold text-white mb-2", children: "Nearest Hospital" }), _jsx("p", { className: "text-gray-300", children: "University Medical Center (2.3 miles)" })] }), _jsxs("div", { className: "bg-gray-700 rounded-lg p-4", children: [_jsx("h3", { className: "font-semibold text-white mb-2", children: "Trauma Center" }), _jsx("p", { className: "text-gray-300", children: "Level 1 (3.1 miles)" })] }), _jsxs("div", { className: "bg-gray-700 rounded-lg p-4", children: [_jsx("h3", { className: "font-semibold text-white mb-2", children: "Current Zone" }), _jsx("p", { className: "text-gray-300", children: "Response District 4" })] }), _jsx("div", { className: "flex justify-end", children: _jsx(Button, { className: "bg-blue-600 text-white hover:bg-blue-700", onClick: () => setShowLocationServices(false), children: "Close" }) })] })] }) })), showFieldReferences && (_jsx(Dialog, { open: showFieldReferences, onOpenChange: setShowFieldReferences, children: _jsxs(DialogContent, { className: "bg-gray-800 text-white border-gray-700 max-w-3xl", children: [_jsx(DialogHeader, { children: _jsx(DialogTitle, { className: "text-white", children: "Field References" }) }), _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "bg-gray-700 rounded-lg p-4", children: [_jsx("h3", { className: "font-semibold text-white mb-3", children: "Quick Reference Guides" }), _jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsx("span", { className: "text-gray-300", children: "Adult CPR Protocol" }), _jsxs(Button, { size: "sm", className: "bg-blue-600 hover:bg-blue-700", children: [_jsx(Link, { className: "h-3 w-3 mr-1" }), "Open"] })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsx("span", { className: "text-gray-300", children: "Pediatric Emergency Guidelines" }), _jsxs(Button, { size: "sm", className: "bg-blue-600 hover:bg-blue-700", children: [_jsx(Link, { className: "h-3 w-3 mr-1" }), "Open"] })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsx("span", { className: "text-gray-300", children: "Medication Dosing Charts" }), _jsxs(Button, { size: "sm", className: "bg-blue-600 hover:bg-blue-700", children: [_jsx(Link, { className: "h-3 w-3 mr-1" }), "Open"] })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsx("span", { className: "text-gray-300", children: "Trauma Assessment Protocols" }), _jsxs(Button, { size: "sm", className: "bg-blue-600 hover:bg-blue-700", children: [_jsx(Link, { className: "h-3 w-3 mr-1" }), "Open"] })] })] })] }), _jsxs("div", { className: "bg-gray-700 rounded-lg p-4", children: [_jsx("h3", { className: "font-semibold text-white mb-3", children: "Emergency Procedures" }), _jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsx("span", { className: "text-gray-300", children: "Airway Management" }), _jsxs(Button, { size: "sm", className: "bg-green-600 hover:bg-green-700", children: [_jsx(FileText, { className: "h-3 w-3 mr-1" }), "View Protocol"] })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsx("span", { className: "text-gray-300", children: "Cardiac Arrest Protocols" }), _jsxs(Button, { size: "sm", className: "bg-green-600 hover:bg-green-700", children: [_jsx(FileText, { className: "h-3 w-3 mr-1" }), "View Protocol"] })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsx("span", { className: "text-gray-300", children: "Shock Treatment Guidelines" }), _jsxs(Button, { size: "sm", className: "bg-green-600 hover:bg-green-700", children: [_jsx(FileText, { className: "h-3 w-3 mr-1" }), "View Protocol"] })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsx("span", { className: "text-gray-300", children: "Burn Care Procedures" }), _jsxs(Button, { size: "sm", className: "bg-green-600 hover:bg-green-700", children: [_jsx(FileText, { className: "h-3 w-3 mr-1" }), "View Protocol"] })] })] })] }), _jsxs("div", { className: "bg-gray-700 rounded-lg p-4", children: [_jsx("h3", { className: "font-semibold text-white mb-3", children: "External Resources" }), _jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsx("span", { className: "text-gray-300", children: "AHA Guidelines" }), _jsxs(Button, { size: "sm", className: "bg-purple-600 hover:bg-purple-700", children: [_jsx(Globe, { className: "h-3 w-3 mr-1" }), "Visit Site"] })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsx("span", { className: "text-gray-300", children: "NREMT Standards" }), _jsxs(Button, { size: "sm", className: "bg-purple-600 hover:bg-purple-700", children: [_jsx(Globe, { className: "h-3 w-3 mr-1" }), "Visit Site"] })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsx("span", { className: "text-gray-300", children: "Clark County EMS" }), _jsxs(Button, { size: "sm", className: "bg-purple-600 hover:bg-purple-700", children: [_jsx(Globe, { className: "h-3 w-3 mr-1" }), "Visit Site"] })] })] })] }), _jsx("div", { className: "flex justify-end", children: _jsx(Button, { className: "bg-blue-600 text-white hover:bg-blue-700", onClick: () => setShowFieldReferences(false), children: "Close" }) })] })] }) })), showProtocolUploadModal && (_jsx(Dialog, { open: showProtocolUploadModal, onOpenChange: setShowProtocolUploadModal, children: _jsxs(DialogContent, { className: "bg-gray-800 text-white border-gray-700", children: [_jsx(DialogHeader, { children: _jsx(DialogTitle, { className: "text-white", children: "Protocol Upload" }) }), _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "bg-gray-700 rounded-lg p-4", children: [_jsx("h3", { className: "font-semibold text-white mb-2", children: "Upload New Protocol" }), _jsx("p", { className: "text-gray-300 mb-4", children: "Select protocol files to upload to the system" }), _jsxs("div", { className: "border-2 border-dashed border-gray-600 rounded-lg p-8 text-center", children: [_jsx(Upload, { className: "h-12 w-12 text-gray-400 mx-auto mb-4" }), _jsx("p", { className: "text-gray-300", children: "Drag and drop files here or click to browse" }), _jsx("p", { className: "text-gray-400 text-sm mt-2", children: "Supported formats: PDF, DOCX, TXT" })] })] }), _jsxs("div", { className: "flex justify-end space-x-2", children: [_jsx(Button, { variant: "outline", className: "border-gray-600 text-gray-300 hover:bg-gray-700", onClick: () => setShowProtocolUploadModal(false), children: "Cancel" }), _jsx(Button, { className: "bg-blue-600 text-white hover:bg-blue-700", children: "Upload" })] })] })] }) })), showIncidentReports && (_jsx(Dialog, { open: showIncidentReports, onOpenChange: setShowIncidentReports, children: _jsxs(DialogContent, { className: "bg-gray-800 text-white border-gray-700", children: [_jsx(DialogHeader, { children: _jsx(DialogTitle, { className: "text-white", children: "Incident Reports" }) }), _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "bg-gray-700 rounded-lg p-4", children: [_jsx("h3", { className: "font-semibold text-white mb-2", children: "Recent Reports" }), _jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex justify-between items-center", children: [_jsx("span", { className: "text-gray-300", children: "Report #2025-001" }), _jsx("span", { className: "text-gray-400", children: "Jan 14, 2025" })] }), _jsxs("div", { className: "flex justify-between items-center", children: [_jsx("span", { className: "text-gray-300", children: "Report #2025-002" }), _jsx("span", { className: "text-gray-400", children: "Jan 13, 2025" })] })] })] }), _jsxs("div", { className: "bg-gray-700 rounded-lg p-4", children: [_jsx("h3", { className: "font-semibold text-white mb-2", children: "Create New Report" }), _jsxs(Button, { className: "w-full bg-blue-600 text-white hover:bg-blue-700", children: [_jsx(Plus, { className: "h-4 w-4 mr-2" }), "New Incident Report"] })] }), _jsx("div", { className: "flex justify-end", children: _jsx(Button, { className: "bg-blue-600 text-white hover:bg-blue-700", onClick: () => setShowIncidentReports(false), children: "Close" }) })] })] }) })), showAlertSystem && (_jsx(Dialog, { open: showAlertSystem, onOpenChange: setShowAlertSystem, children: _jsxs(DialogContent, { className: "bg-gray-800 text-white border-gray-700", children: [_jsx(DialogHeader, { children: _jsx(DialogTitle, { className: "text-white", children: "Alert System" }) }), _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "bg-gray-700 rounded-lg p-4", children: [_jsx("h3", { className: "font-semibold text-white mb-2", children: "Active Alerts" }), _jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex items-center space-x-2", children: [_jsx(AlertTriangle, { className: "h-4 w-4 text-yellow-400" }), _jsx("span", { className: "text-gray-300", children: "Medication recall notification" })] }), _jsxs("div", { className: "flex items-center space-x-2", children: [_jsx(Info, { className: "h-4 w-4 text-blue-400" }), _jsx("span", { className: "text-gray-300", children: "Protocol update available" })] })] })] }), _jsxs("div", { className: "bg-gray-700 rounded-lg p-4", children: [_jsx("h3", { className: "font-semibold text-white mb-2", children: "Alert Preferences" }), _jsxs("div", { className: "space-y-2", children: [_jsxs("label", { className: "flex items-center space-x-2", children: [_jsx("input", { type: "checkbox", className: "text-blue-600", defaultChecked: true }), _jsx("span", { className: "text-gray-300", children: "Critical alerts" })] }), _jsxs("label", { className: "flex items-center space-x-2", children: [_jsx("input", { type: "checkbox", className: "text-blue-600", defaultChecked: true }), _jsx("span", { className: "text-gray-300", children: "Protocol updates" })] }), _jsxs("label", { className: "flex items-center space-x-2", children: [_jsx("input", { type: "checkbox", className: "text-blue-600" }), _jsx("span", { className: "text-gray-300", children: "Maintenance reminders" })] })] })] }), _jsx("div", { className: "flex justify-end", children: _jsx(Button, { className: "bg-blue-600 text-white hover:bg-blue-700", onClick: () => setShowAlertSystem(false), children: "Close" }) })] })] }) })), showShiftScheduler && (_jsx(Dialog, { open: showShiftScheduler, onOpenChange: setShowShiftScheduler, children: _jsxs(DialogContent, { className: "bg-gray-800 text-white border-gray-700 max-w-2xl", children: [_jsx(DialogHeader, { children: _jsx(DialogTitle, { className: "text-white", children: "Shift Scheduler" }) }), _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "bg-gray-700 rounded-lg p-4", children: [_jsx("h3", { className: "font-semibold text-white mb-2", children: "Current Shift" }), _jsx("p", { className: "text-gray-300", children: "Today 06:00 - 18:00" }), _jsx("p", { className: "text-gray-400", children: "Ends in: 4 hours 23 minutes" })] }), _jsxs("div", { className: "bg-gray-700 rounded-lg p-4", children: [_jsx("h3", { className: "font-semibold text-white mb-4", children: "Weekly Schedule - Editable" }), _jsxs("div", { className: "space-y-3", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsx("span", { className: "text-gray-300 w-24", children: "Monday" }), _jsxs("div", { className: "flex items-center space-x-2", children: [_jsx("input", { type: "time", defaultValue: "06:00", className: "bg-gray-600 text-white border border-gray-500 rounded px-2 py-1 text-sm" }), _jsx("span", { className: "text-gray-400", children: "-" }), _jsx("input", { type: "time", defaultValue: "18:00", className: "bg-gray-600 text-white border border-gray-500 rounded px-2 py-1 text-sm" }), _jsx(Button, { size: "sm", variant: "outline", className: "border-gray-500 text-gray-300 hover:bg-gray-600", children: _jsx(Edit, { className: "h-3 w-3" }) })] })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsx("span", { className: "text-gray-300 w-24", children: "Tuesday" }), _jsxs("div", { className: "flex items-center space-x-2", children: [_jsx("input", { type: "time", defaultValue: "06:00", className: "bg-gray-600 text-white border border-gray-500 rounded px-2 py-1 text-sm" }), _jsx("span", { className: "text-gray-400", children: "-" }), _jsx("input", { type: "time", defaultValue: "18:00", className: "bg-gray-600 text-white border border-gray-500 rounded px-2 py-1 text-sm" }), _jsx(Button, { size: "sm", variant: "outline", className: "border-gray-500 text-gray-300 hover:bg-gray-600", children: _jsx(Edit, { className: "h-3 w-3" }) })] })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsx("span", { className: "text-gray-300 w-24", children: "Wednesday" }), _jsxs("div", { className: "flex items-center space-x-2", children: [_jsxs("select", { className: "bg-gray-600 text-white border border-gray-500 rounded px-2 py-1 text-sm", children: [_jsx("option", { value: "off", children: "Off" }), _jsx("option", { value: "shift", children: "Scheduled" })] }), _jsx("input", { type: "time", defaultValue: "06:00", className: "bg-gray-600 text-white border border-gray-500 rounded px-2 py-1 text-sm opacity-50", disabled: true }), _jsx("span", { className: "text-gray-400", children: "-" }), _jsx("input", { type: "time", defaultValue: "18:00", className: "bg-gray-600 text-white border border-gray-500 rounded px-2 py-1 text-sm opacity-50", disabled: true }), _jsx(Button, { size: "sm", variant: "outline", className: "border-gray-500 text-gray-300 hover:bg-gray-600", children: _jsx(Edit, { className: "h-3 w-3" }) })] })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsx("span", { className: "text-gray-300 w-24", children: "Thursday" }), _jsxs("div", { className: "flex items-center space-x-2", children: [_jsx("input", { type: "time", defaultValue: "06:00", className: "bg-gray-600 text-white border border-gray-500 rounded px-2 py-1 text-sm" }), _jsx("span", { className: "text-gray-400", children: "-" }), _jsx("input", { type: "time", defaultValue: "18:00", className: "bg-gray-600 text-white border border-gray-500 rounded px-2 py-1 text-sm" }), _jsx(Button, { size: "sm", variant: "outline", className: "border-gray-500 text-gray-300 hover:bg-gray-600", children: _jsx(Edit, { className: "h-3 w-3" }) })] })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsx("span", { className: "text-gray-300 w-24", children: "Friday" }), _jsxs("div", { className: "flex items-center space-x-2", children: [_jsx("input", { type: "time", defaultValue: "06:00", className: "bg-gray-600 text-white border border-gray-500 rounded px-2 py-1 text-sm" }), _jsx("span", { className: "text-gray-400", children: "-" }), _jsx("input", { type: "time", defaultValue: "18:00", className: "bg-gray-600 text-white border border-gray-500 rounded px-2 py-1 text-sm" }), _jsx(Button, { size: "sm", variant: "outline", className: "border-gray-500 text-gray-300 hover:bg-gray-600", children: _jsx(Edit, { className: "h-3 w-3" }) })] })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsx("span", { className: "text-gray-300 w-24", children: "Saturday" }), _jsxs("div", { className: "flex items-center space-x-2", children: [_jsxs("select", { className: "bg-gray-600 text-white border border-gray-500 rounded px-2 py-1 text-sm", children: [_jsx("option", { value: "off", children: "Off" }), _jsx("option", { value: "shift", children: "Scheduled" })] }), _jsx("input", { type: "time", defaultValue: "06:00", className: "bg-gray-600 text-white border border-gray-500 rounded px-2 py-1 text-sm opacity-50", disabled: true }), _jsx("span", { className: "text-gray-400", children: "-" }), _jsx("input", { type: "time", defaultValue: "18:00", className: "bg-gray-600 text-white border border-gray-500 rounded px-2 py-1 text-sm opacity-50", disabled: true }), _jsx(Button, { size: "sm", variant: "outline", className: "border-gray-500 text-gray-300 hover:bg-gray-600", children: _jsx(Edit, { className: "h-3 w-3" }) })] })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsx("span", { className: "text-gray-300 w-24", children: "Sunday" }), _jsxs("div", { className: "flex items-center space-x-2", children: [_jsxs("select", { className: "bg-gray-600 text-white border border-gray-500 rounded px-2 py-1 text-sm", children: [_jsx("option", { value: "off", children: "Off" }), _jsx("option", { value: "shift", children: "Scheduled" })] }), _jsx("input", { type: "time", defaultValue: "06:00", className: "bg-gray-600 text-white border border-gray-500 rounded px-2 py-1 text-sm opacity-50", disabled: true }), _jsx("span", { className: "text-gray-400", children: "-" }), _jsx("input", { type: "time", defaultValue: "18:00", className: "bg-gray-600 text-white border border-gray-500 rounded px-2 py-1 text-sm opacity-50", disabled: true }), _jsx(Button, { size: "sm", variant: "outline", className: "border-gray-500 text-gray-300 hover:bg-gray-600", children: _jsx(Edit, { className: "h-3 w-3" }) })] })] })] })] }), _jsxs("div", { className: "bg-gray-700 rounded-lg p-4", children: [_jsx("h3", { className: "font-semibold text-white mb-2", children: "Quick Actions" }), _jsxs("div", { className: "grid grid-cols-2 gap-2", children: [_jsxs(Button, { size: "sm", className: "bg-blue-600 text-white hover:bg-blue-700", children: [_jsx(Calendar, { className: "h-3 w-3 mr-1" }), "Request Time Off"] }), _jsxs(Button, { size: "sm", className: "bg-green-600 text-white hover:bg-green-700", children: [_jsx(Users, { className: "h-3 w-3 mr-1" }), "Swap Shifts"] }), _jsxs(Button, { size: "sm", className: "bg-purple-600 text-white hover:bg-purple-700", children: [_jsx(Clock, { className: "h-3 w-3 mr-1" }), "Overtime Request"] }), _jsxs(Button, { size: "sm", className: "bg-orange-600 text-white hover:bg-orange-700", children: [_jsx(Settings, { className: "h-3 w-3 mr-1" }), "Schedule Preferences"] })] })] }), _jsxs("div", { className: "flex justify-between", children: [_jsx(Button, { variant: "outline", className: "border-gray-600 text-gray-300 hover:bg-gray-700", onClick: () => setShowShiftScheduler(false), children: "\u2190 Back to Field Tools" }), _jsxs("div", { className: "space-x-2", children: [_jsx(Button, { variant: "outline", className: "border-gray-600 text-gray-300 hover:bg-gray-700", onClick: () => setShowShiftScheduler(false), children: "Cancel" }), _jsxs(Button, { className: "bg-blue-600 text-white hover:bg-blue-700", children: [_jsx(Save, { className: "h-4 w-4 mr-2" }), "Save Schedule"] })] })] })] })] }) })), showMaintenanceLog && (_jsx(Dialog, { open: showMaintenanceLog, onOpenChange: setShowMaintenanceLog, children: _jsxs(DialogContent, { className: "bg-gray-800 text-white border-gray-700 max-w-4xl", children: [_jsx(DialogHeader, { children: _jsx(DialogTitle, { className: "text-white", children: "Maintenance Log & Service Records" }) }), _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "bg-gray-700 rounded-lg p-4", children: [_jsx("h3", { className: "font-semibold text-white mb-3", children: "Vehicle Maintenance" }), _jsxs("div", { className: "space-y-3", children: [_jsxs("div", { className: "flex justify-between items-center", children: [_jsxs("div", { className: "flex items-center space-x-2", children: [_jsx("span", { className: "text-gray-300", children: "Engine Oil" }), _jsx("input", { type: "date", className: "bg-gray-600 text-white border border-gray-500 rounded px-2 py-1 text-sm", defaultValue: "2024-12-01" })] }), _jsxs("div", { className: "flex items-center space-x-2", children: [_jsx("span", { className: "text-green-400", children: "Good (3,200 miles)" }), _jsxs(Button, { size: "sm", className: "bg-green-600 hover:bg-green-700", children: [_jsx(CheckCircle, { className: "h-3 w-3 mr-1" }), "Update"] })] })] }), _jsxs("div", { className: "flex justify-between items-center", children: [_jsxs("div", { className: "flex items-center space-x-2", children: [_jsx("span", { className: "text-gray-300", children: "Brake Pads" }), _jsx("input", { type: "date", className: "bg-gray-600 text-white border border-gray-500 rounded px-2 py-1 text-sm", defaultValue: "2024-11-15" })] }), _jsxs("div", { className: "flex items-center space-x-2", children: [_jsx("span", { className: "text-yellow-400", children: "Service Due" }), _jsxs(Button, { size: "sm", className: "bg-yellow-600 hover:bg-yellow-700", children: [_jsx(AlertTriangle, { className: "h-3 w-3 mr-1" }), "Schedule"] })] })] }), _jsxs("div", { className: "flex justify-between items-center", children: [_jsxs("div", { className: "flex items-center space-x-2", children: [_jsx("span", { className: "text-gray-300", children: "Tires" }), _jsx("input", { type: "date", className: "bg-gray-600 text-white border border-gray-500 rounded px-2 py-1 text-sm", defaultValue: "2024-10-20" })] }), _jsxs("div", { className: "flex items-center space-x-2", children: [_jsx("span", { className: "text-green-400", children: "Good (12,000 miles)" }), _jsxs(Button, { size: "sm", className: "bg-green-600 hover:bg-green-700", children: [_jsx(CheckCircle, { className: "h-3 w-3 mr-1" }), "Update"] })] })] })] })] }), _jsxs("div", { className: "bg-gray-700 rounded-lg p-4", children: [_jsx("h3", { className: "font-semibold text-white mb-3", children: "Equipment Maintenance" }), _jsxs("div", { className: "space-y-3", children: [_jsxs("div", { className: "flex justify-between items-center", children: [_jsxs("div", { className: "flex items-center space-x-2", children: [_jsx("span", { className: "text-gray-300", children: "Defibrillator" }), _jsx("input", { type: "date", className: "bg-gray-600 text-white border border-gray-500 rounded px-2 py-1 text-sm", defaultValue: "2024-12-15" })] }), _jsxs("div", { className: "flex items-center space-x-2", children: [_jsx("span", { className: "text-green-400", children: "Tested (12/15/2024)" }), _jsxs(Button, { size: "sm", className: "bg-green-600 hover:bg-green-700", children: [_jsx(Zap, { className: "h-3 w-3 mr-1" }), "Test"] })] })] }), _jsxs("div", { className: "flex justify-between items-center", children: [_jsxs("div", { className: "flex items-center space-x-2", children: [_jsx("span", { className: "text-gray-300", children: "Oxygen Tank" }), _jsx("input", { type: "number", className: "bg-gray-600 text-white border border-gray-500 rounded px-2 py-1 text-sm w-20", defaultValue: "2200", placeholder: "PSI" })] }), _jsxs("div", { className: "flex items-center space-x-2", children: [_jsx("span", { className: "text-green-400", children: "Full (2,200 PSI)" }), _jsxs(Button, { size: "sm", className: "bg-blue-600 hover:bg-blue-700", children: [_jsx(Gauge, { className: "h-3 w-3 mr-1" }), "Check"] })] })] }), _jsxs("div", { className: "flex justify-between items-center", children: [_jsxs("div", { className: "flex items-center space-x-2", children: [_jsx("span", { className: "text-gray-300", children: "Suction Unit" }), _jsx("input", { type: "date", className: "bg-gray-600 text-white border border-gray-500 rounded px-2 py-1 text-sm", defaultValue: "2024-11-28" })] }), _jsxs("div", { className: "flex items-center space-x-2", children: [_jsx("span", { className: "text-red-400", children: "Needs Service" }), _jsxs(Button, { size: "sm", className: "bg-red-600 hover:bg-red-700", children: [_jsx(XCircle, { className: "h-3 w-3 mr-1" }), "Service"] })] })] })] })] }), _jsxs("div", { className: "bg-gray-700 rounded-lg p-4", children: [_jsx("h3", { className: "font-semibold text-white mb-3", children: "Add New Maintenance Record" }), _jsxs("div", { className: "grid grid-cols-3 gap-4", children: [_jsxs("div", { children: [_jsx("label", { className: "block text-sm text-gray-300 mb-1", children: "Item" }), _jsx("input", { type: "text", className: "bg-gray-600 text-white border border-gray-500 rounded px-2 py-1 w-full", placeholder: "Equipment/Vehicle part" })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm text-gray-300 mb-1", children: "Date" }), _jsx("input", { type: "date", className: "bg-gray-600 text-white border border-gray-500 rounded px-2 py-1 w-full" })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm text-gray-300 mb-1", children: "Status" }), _jsxs("select", { className: "bg-gray-600 text-white border border-gray-500 rounded px-2 py-1 w-full", children: [_jsx("option", { children: "Good" }), _jsx("option", { children: "Service Due" }), _jsx("option", { children: "Needs Service" }), _jsx("option", { children: "Out of Service" })] })] })] }), _jsxs("div", { className: "mt-3", children: [_jsx("label", { className: "block text-sm text-gray-300 mb-1", children: "Notes" }), _jsx("textarea", { className: "bg-gray-600 text-white border border-gray-500 rounded px-2 py-1 w-full h-20", placeholder: "Maintenance notes..." })] })] }), _jsxs("div", { className: "flex justify-end space-x-2", children: [_jsx(Button, { variant: "outline", className: "border-gray-600 text-gray-300 hover:bg-gray-700", onClick: () => setShowMaintenanceLog(false), children: "Cancel" }), _jsxs(Button, { className: "bg-blue-600 text-white hover:bg-blue-700", children: [_jsx(Save, { className: "h-4 w-4 mr-2" }), "Save Maintenance Log"] })] })] })] }) })), showEquipmentChecklist && (_jsx(Dialog, { open: showEquipmentChecklist, onOpenChange: setShowEquipmentChecklist, children: _jsxs(DialogContent, { className: "bg-gray-800 text-white border-gray-700 max-w-3xl max-h-[90vh] overflow-y-auto", children: [_jsx(DialogHeader, { children: _jsx(DialogTitle, { className: "text-white", children: "Equipment Checklist" }) }), _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "bg-gray-700 rounded-lg p-4", children: [_jsx("h3", { className: "font-semibold text-white mb-3", children: "Primary Equipment" }), _jsx("div", { className: "space-y-2", children: [
                                                { name: "Defibrillator/AED", status: "âœ“", color: "text-green-300", bgColor: "bg-green-900/20" },
                                                { name: "Oxygen Tank (Full)", status: "âœ“", color: "text-green-300", bgColor: "bg-green-900/20" },
                                                { name: "Suction Unit", status: "âœ—", color: "text-red-300", bgColor: "bg-red-900/20" },
                                                { name: "Pulse Oximeter", status: "âœ“", color: "text-green-300", bgColor: "bg-green-900/20" },
                                                { name: "Blood Pressure Cuff", status: "âœ“", color: "text-green-300", bgColor: "bg-green-900/20" },
                                                { name: "Thermometer", status: "âœ“", color: "text-green-300", bgColor: "bg-green-900/20" }
                                            ].map((item, index) => (_jsxs("div", { className: `flex items-center justify-between p-2 rounded ${item.bgColor}`, children: [_jsxs("div", { className: "flex items-center space-x-2", children: [_jsx("input", { type: "checkbox", defaultChecked: item.status === "âœ“", className: "rounded" }), _jsx("span", { className: "text-white font-medium", children: item.name })] }), _jsx("span", { className: `${item.color} font-bold text-lg`, children: item.status })] }, index))) })] }), _jsxs("div", { className: "bg-gray-700 rounded-lg p-4", children: [_jsx("h3", { className: "font-semibold text-white mb-3", children: "Medications" }), _jsx("div", { className: "space-y-2", children: [
                                                { name: "Epinephrine", status: "âœ“", color: "text-green-300", bgColor: "bg-green-900/20" },
                                                { name: "Albuterol", status: "âœ“", color: "text-green-300", bgColor: "bg-green-900/20" },
                                                { name: "Aspirin", status: "âœ“", color: "text-green-300", bgColor: "bg-green-900/20" },
                                                { name: "Narcan", status: "âœ“", color: "text-green-300", bgColor: "bg-green-900/20" },
                                                { name: "Glucose", status: "!", color: "text-yellow-300", bgColor: "bg-yellow-900/20" },
                                                { name: "Activated Charcoal", status: "âœ“", color: "text-green-300", bgColor: "bg-green-900/20" }
                                            ].map((item, index) => (_jsxs("div", { className: `flex items-center justify-between p-2 rounded ${item.bgColor}`, children: [_jsxs("div", { className: "flex items-center space-x-2", children: [_jsx("input", { type: "checkbox", defaultChecked: item.status === "âœ“", className: "rounded" }), _jsx("span", { className: "text-white font-medium", children: item.name })] }), _jsx("span", { className: `${item.color} font-bold text-lg`, children: item.status })] }, index))) })] }), _jsxs("div", { className: "bg-gray-700 rounded-lg p-4", children: [_jsx("h3", { className: "font-semibold text-white mb-3", children: "Vehicle Supplies" }), _jsx("div", { className: "space-y-2", children: [
                                                { name: "Stretcher", status: "âœ“", color: "text-green-300", bgColor: "bg-green-900/20" },
                                                { name: "Backboard", status: "âœ“", color: "text-green-300", bgColor: "bg-green-900/20" },
                                                { name: "Cervical Collars", status: "âœ“", color: "text-green-300", bgColor: "bg-green-900/20" },
                                                { name: "Bandages/Gauze", status: "!", color: "text-yellow-300", bgColor: "bg-yellow-900/20" },
                                                { name: "IV Supplies", status: "âœ“", color: "text-green-300", bgColor: "bg-green-900/20" },
                                                { name: "Trauma Kit", status: "âœ“", color: "text-green-300", bgColor: "bg-green-900/20" }
                                            ].map((item, index) => (_jsxs("div", { className: `flex items-center justify-between p-2 rounded ${item.bgColor}`, children: [_jsxs("div", { className: "flex items-center space-x-2", children: [_jsx("input", { type: "checkbox", defaultChecked: item.status === "âœ“", className: "rounded" }), _jsx("span", { className: "text-white font-medium", children: item.name })] }), _jsx("span", { className: `${item.color} font-bold text-lg`, children: item.status })] }, index))) })] }), _jsxs("div", { className: "flex justify-between", children: [_jsx(Button, { variant: "outline", className: "border-gray-600 text-gray-300 hover:bg-gray-700", onClick: () => setShowEquipmentChecklist(false), children: "\u2190 Back to Field Tools" }), _jsxs("div", { className: "space-x-2", children: [_jsx(Button, { variant: "outline", className: "border-gray-600 text-gray-300 hover:bg-gray-700", onClick: () => setShowEquipmentChecklist(false), children: "Cancel" }), _jsxs(Button, { className: "bg-blue-600 text-white hover:bg-blue-700", children: [_jsx(Save, { className: "h-4 w-4 mr-2" }), "Save Checklist"] })] })] })] })] }) })), showDataSync && (_jsx(Dialog, { open: showDataSync, onOpenChange: setShowDataSync, children: _jsxs(DialogContent, { className: "bg-gray-800 text-white border-gray-700 max-w-3xl max-h-[90vh] overflow-y-auto", children: [_jsx(DialogHeader, { children: _jsx(DialogTitle, { className: "text-white", children: "Cloud Data Sync Configuration" }) }), _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "bg-gray-700 rounded-lg p-4", children: [_jsx("h3", { className: "font-semibold text-white mb-3", children: "Server Configuration" }), _jsxs("div", { className: "space-y-3", children: [_jsxs("div", { children: [_jsx("label", { className: "text-gray-300 text-sm block mb-1", children: "Primary Server" }), _jsxs("select", { className: "w-full bg-gray-600 text-white rounded p-2 border border-gray-500", children: [_jsx("option", { children: "ProMedix EMS Central Database" }), _jsx("option", { children: "Nevada State EMS Registry" }), _jsx("option", { children: "National EMS Information System" }), _jsx("option", { children: "Custom Server" })] })] }), _jsxs("div", { children: [_jsx("label", { className: "text-gray-300 text-sm block mb-1", children: "Backup Server" }), _jsxs("select", { className: "w-full bg-gray-600 text-white rounded p-2 border border-gray-500", children: [_jsx("option", { children: "Nevada State EMS Registry" }), _jsx("option", { children: "ProMedix EMS Central Database" }), _jsx("option", { children: "National EMS Information System" }), _jsx("option", { children: "None" })] })] }), _jsxs("div", { children: [_jsx("label", { className: "text-gray-300 text-sm block mb-1", children: "Server URL (Custom)" }), _jsx("input", { type: "text", placeholder: "https://custom-server.ems.gov/api", className: "w-full bg-gray-600 text-white rounded p-2 border border-gray-500 placeholder-gray-400" })] }), _jsxs("div", { children: [_jsx("label", { className: "text-gray-300 text-sm block mb-1", children: "API Key" }), _jsx("input", { type: "password", placeholder: "Enter API key for secure connection", className: "w-full bg-gray-600 text-white rounded p-2 border border-gray-500 placeholder-gray-400" })] })] })] }), _jsxs("div", { className: "bg-gray-700 rounded-lg p-4", children: [_jsx("h3", { className: "font-semibold text-white mb-3", children: "Sync Status" }), _jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsx("span", { className: "text-gray-300", children: "Last Sync" }), _jsx("span", { className: "text-green-400", children: "5 minutes ago" })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsx("span", { className: "text-gray-300", children: "Status" }), _jsxs("div", { className: "flex items-center space-x-2", children: [_jsx("div", { className: "w-2 h-2 bg-green-400 rounded-full" }), _jsx("span", { className: "text-green-400", children: "Connected" })] })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsx("span", { className: "text-gray-300", children: "Connection Quality" }), _jsx("span", { className: "text-green-400", children: "Excellent (HIPAA Compliant)" })] })] })] }), _jsxs("div", { className: "bg-gray-700 rounded-lg p-4", children: [_jsx("h3", { className: "font-semibold text-white mb-3", children: "Data Categories" }), _jsxs("div", { className: "space-y-3", children: [_jsxs("div", { className: "flex items-center justify-between p-2 bg-gray-600 rounded", children: [_jsxs("div", { className: "flex items-center space-x-3", children: [_jsx("input", { type: "checkbox", defaultChecked: true, className: "rounded" }), _jsxs("div", { children: [_jsx("span", { className: "text-gray-300", children: "Protocols & Guidelines" }), _jsx("div", { className: "text-xs text-gray-400", children: "ProMedix EMS protocols and procedures" })] })] }), _jsxs("div", { className: "text-right", children: [_jsx("span", { className: "text-gray-400 text-sm", children: "15.2 MB" }), _jsx("div", { className: "text-xs text-green-400", children: "\u2713 Synced" })] })] }), _jsxs("div", { className: "flex items-center justify-between p-2 bg-gray-600 rounded", children: [_jsxs("div", { className: "flex items-center space-x-3", children: [_jsx("input", { type: "checkbox", defaultChecked: true, className: "rounded" }), _jsxs("div", { children: [_jsx("span", { className: "text-gray-300", children: "Medication Database" }), _jsx("div", { className: "text-xs text-gray-400", children: "Emergency medications and dosing information" })] })] }), _jsxs("div", { className: "text-right", children: [_jsx("span", { className: "text-gray-400 text-sm", children: "8.1 MB" }), _jsx("div", { className: "text-xs text-green-400", children: "\u2713 Synced" })] })] }), _jsxs("div", { className: "flex items-center justify-between p-2 bg-gray-600 rounded", children: [_jsxs("div", { className: "flex items-center space-x-3", children: [_jsx("input", { type: "checkbox", defaultChecked: true, className: "rounded" }), _jsxs("div", { children: [_jsx("span", { className: "text-gray-300", children: "Calculator Results" }), _jsx("div", { className: "text-xs text-gray-400", children: "Saved calculations and patient assessments" })] })] }), _jsxs("div", { className: "text-right", children: [_jsx("span", { className: "text-gray-400 text-sm", children: "1.2 MB" }), _jsx("div", { className: "text-xs text-yellow-400", children: "\u26A1 Pending" })] })] }), _jsxs("div", { className: "flex items-center justify-between p-2 bg-gray-600 rounded", children: [_jsxs("div", { className: "flex items-center space-x-3", children: [_jsx("input", { type: "checkbox", defaultChecked: true, className: "rounded" }), _jsxs("div", { children: [_jsx("span", { className: "text-gray-300", children: "User Settings & Preferences" }), _jsx("div", { className: "text-xs text-gray-400", children: "Personal configurations and preferences" })] })] }), _jsxs("div", { className: "text-right", children: [_jsx("span", { className: "text-gray-400 text-sm", children: "0.2 MB" }), _jsx("div", { className: "text-xs text-green-400", children: "\u2713 Synced" })] })] }), _jsxs("div", { className: "flex items-center justify-between p-2 bg-gray-600 rounded", children: [_jsxs("div", { className: "flex items-center space-x-3", children: [_jsx("input", { type: "checkbox", className: "rounded" }), _jsxs("div", { children: [_jsx("span", { className: "text-gray-300", children: "Case Reports & Documentation" }), _jsx("div", { className: "text-xs text-gray-400", children: "Field reports and incident documentation" })] })] }), _jsxs("div", { className: "text-right", children: [_jsx("span", { className: "text-gray-400 text-sm", children: "12.4 MB" }), _jsx("div", { className: "text-xs text-gray-400", children: "\u25CB Disabled" })] })] })] })] }), _jsxs("div", { className: "bg-gray-700 rounded-lg p-4", children: [_jsx("h3", { className: "font-semibold text-white mb-3", children: "Sync Settings" }), _jsxs("div", { className: "space-y-3", children: [_jsxs("div", { children: [_jsx("label", { className: "text-gray-300 text-sm block mb-2", children: "Sync Frequency" }), _jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex items-center space-x-2", children: [_jsx("input", { type: "radio", name: "syncMode", value: "auto", defaultChecked: true, className: "rounded" }), _jsx("span", { className: "text-gray-300", children: "Auto-sync every" }), _jsxs("select", { className: "bg-gray-600 text-white rounded px-2 py-1 text-sm border border-gray-500", children: [_jsx("option", { value: "5", children: "5 minutes" }), _jsx("option", { value: "15", selected: true, children: "15 minutes" }), _jsx("option", { value: "30", children: "30 minutes" }), _jsx("option", { value: "60", children: "1 hour" })] })] }), _jsxs("div", { className: "flex items-center space-x-2", children: [_jsx("input", { type: "radio", name: "syncMode", value: "manual", className: "rounded" }), _jsx("span", { className: "text-gray-300", children: "Manual sync only" })] }), _jsxs("div", { className: "flex items-center space-x-2", children: [_jsx("input", { type: "radio", name: "syncMode", value: "trigger", className: "rounded" }), _jsx("span", { className: "text-gray-300", children: "Sync on data changes" })] })] })] }), _jsxs("div", { children: [_jsx("label", { className: "text-gray-300 text-sm block mb-2", children: "Connection Settings" }), _jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex items-center space-x-2", children: [_jsx("input", { type: "checkbox", defaultChecked: true, className: "rounded" }), _jsx("span", { className: "text-gray-300", children: "Sync on WiFi only" })] }), _jsxs("div", { className: "flex items-center space-x-2", children: [_jsx("input", { type: "checkbox", className: "rounded" }), _jsx("span", { className: "text-gray-300", children: "Allow cellular data sync (charges may apply)" })] }), _jsxs("div", { className: "flex items-center space-x-2", children: [_jsx("input", { type: "checkbox", defaultChecked: true, className: "rounded" }), _jsx("span", { className: "text-gray-300", children: "Pause sync during emergency calls" })] }), _jsxs("div", { className: "flex items-center space-x-2", children: [_jsx("input", { type: "checkbox", defaultChecked: true, className: "rounded" }), _jsx("span", { className: "text-gray-300", children: "Enable background sync" })] })] })] }), _jsxs("div", { children: [_jsx("label", { className: "text-gray-300 text-sm block mb-2", children: "Data Retention" }), _jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex items-center space-x-2", children: [_jsx("span", { className: "text-gray-300 text-sm", children: "Keep local data for" }), _jsxs("select", { className: "bg-gray-600 text-white rounded px-2 py-1 text-sm border border-gray-500", children: [_jsx("option", { value: "7", children: "7 days" }), _jsx("option", { value: "30", selected: true, children: "30 days" }), _jsx("option", { value: "90", children: "90 days" }), _jsx("option", { value: "365", children: "1 year" }), _jsx("option", { value: "forever", children: "Forever" })] })] }), _jsxs("div", { className: "flex items-center space-x-2", children: [_jsx("input", { type: "checkbox", defaultChecked: true, className: "rounded" }), _jsx("span", { className: "text-gray-300 text-sm", children: "Auto-delete synced data older than retention period" })] })] })] })] })] }), _jsxs("div", { className: "bg-gray-700 rounded-lg p-4", children: [_jsx("h3", { className: "font-semibold text-white mb-3", children: "Security & Compliance" }), _jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsx("span", { className: "text-gray-300", children: "Encryption" }), _jsx("span", { className: "text-green-400", children: "AES-256 End-to-End" })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsx("span", { className: "text-gray-300", children: "HIPAA Compliance" }), _jsx("span", { className: "text-green-400", children: "\u2713 Verified" })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsx("span", { className: "text-gray-300", children: "Data Location" }), _jsx("span", { className: "text-blue-400", children: "US East (Virginia)" })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsx("span", { className: "text-gray-300", children: "Audit Logging" }), _jsx("span", { className: "text-green-400", children: "\u2713 Enabled" })] })] })] }), _jsxs("div", { className: "flex justify-between", children: [_jsx(Button, { variant: "outline", className: "border-gray-600 text-gray-300 hover:bg-gray-700", onClick: () => setShowDataSync(false), children: "\u2190 Back to Field Tools" }), _jsxs("div", { className: "flex space-x-2", children: [_jsx(Button, { variant: "outline", className: "border-gray-600 text-gray-300 hover:bg-gray-700", children: "Test Connection" }), _jsx(Button, { variant: "outline", className: "border-gray-600 text-gray-300 hover:bg-gray-700", children: "View Sync Log" }), _jsx(Button, { variant: "outline", className: "border-gray-600 text-gray-300 hover:bg-gray-700", onClick: () => setShowDataSync(false), children: "Cancel" }), _jsxs(Button, { className: "bg-green-600 text-white hover:bg-green-700", children: [_jsx(Save, { className: "h-4 w-4 mr-2" }), "Save Settings"] }), _jsxs(Button, { className: "bg-blue-600 text-white hover:bg-blue-700", children: [_jsx(Cloud, { className: "h-4 w-4 mr-2" }), "Sync Now"] })] })] })] })] }) })), showExportProtocols && (_jsx(Dialog, { open: showExportProtocols, onOpenChange: setShowExportProtocols, children: _jsxs(DialogContent, { className: "bg-gray-800 text-white border-gray-700 max-w-2xl", children: [_jsx(DialogHeader, { children: _jsx(DialogTitle, { className: "text-white", children: "Export Protocols" }) }), _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "bg-gray-700 rounded-lg p-4", children: [_jsx("h3", { className: "font-semibold text-white mb-3", children: "Export Format" }), _jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex items-center space-x-2", children: [_jsx("input", { type: "radio", name: "format", value: "pdf", defaultChecked: true, className: "rounded" }), _jsx("span", { className: "text-gray-300", children: "PDF Collection" })] }), _jsxs("div", { className: "flex items-center space-x-2", children: [_jsx("input", { type: "radio", name: "format", value: "zip", className: "rounded" }), _jsx("span", { className: "text-gray-300", children: "ZIP Archive" })] }), _jsxs("div", { className: "flex items-center space-x-2", children: [_jsx("input", { type: "radio", name: "format", value: "json", className: "rounded" }), _jsx("span", { className: "text-gray-300", children: "JSON Data" })] })] })] }), _jsxs("div", { className: "bg-gray-700 rounded-lg p-4", children: [_jsx("h3", { className: "font-semibold text-white mb-3", children: "Protocol Selection" }), _jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex items-center space-x-2", children: [_jsx("input", { type: "checkbox", defaultChecked: true, className: "rounded" }), _jsx("span", { className: "text-gray-300", children: "Adult Treatment Protocols" })] }), _jsxs("div", { className: "flex items-center space-x-2", children: [_jsx("input", { type: "checkbox", defaultChecked: true, className: "rounded" }), _jsx("span", { className: "text-gray-300", children: "Pediatric Protocols" })] }), _jsxs("div", { className: "flex items-center space-x-2", children: [_jsx("input", { type: "checkbox", defaultChecked: true, className: "rounded" }), _jsx("span", { className: "text-gray-300", children: "Operations Protocols" })] }), _jsxs("div", { className: "flex items-center space-x-2", children: [_jsx("input", { type: "checkbox", className: "rounded" }), _jsx("span", { className: "text-gray-300", children: "Medication Protocols" })] })] })] }), _jsxs("div", { className: "flex justify-between", children: [_jsx(Button, { variant: "outline", className: "border-gray-600 text-gray-300 hover:bg-gray-700", onClick: () => setShowExportProtocols(false), children: "\u2190 Back to Field Tools" }), _jsxs("div", { className: "space-x-2", children: [_jsx(Button, { variant: "outline", className: "border-gray-600 text-gray-300 hover:bg-gray-700", onClick: () => setShowExportProtocols(false), children: "Cancel" }), _jsxs(Button, { className: "bg-blue-600 text-white hover:bg-blue-700", children: [_jsx(Download, { className: "h-4 w-4 mr-2" }), "Export Protocols"] })] })] })] })] }) })), showCaseArchives && (_jsx(Dialog, { open: showCaseArchives, onOpenChange: setShowCaseArchives, children: _jsxs(DialogContent, { className: "bg-gray-800 text-white border-gray-700 max-w-4xl", children: [_jsx(DialogHeader, { children: _jsx(DialogTitle, { className: "text-white", children: "Case Archives" }) }), _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "bg-gray-700 rounded-lg p-4", children: [_jsx("h3", { className: "font-semibold text-white mb-3", children: "Recent Cases" }), _jsx("div", { className: "space-y-3", children: [
                                                { id: "CA-2025-001", date: "2025-01-14", type: "Cardiac Arrest", outcome: "ROSC", status: "Completed" },
                                                { id: "CA-2025-002", date: "2025-01-13", type: "Trauma", outcome: "Stable", status: "Completed" },
                                                { id: "CA-2025-003", date: "2025-01-12", type: "Respiratory", outcome: "Improved", status: "Completed" },
                                                { id: "CA-2025-004", date: "2025-01-11", type: "Overdose", outcome: "Stable", status: "Completed" },
                                                { id: "CA-2025-005", date: "2025-01-10", type: "Stroke", outcome: "Transported", status: "Completed" }
                                            ].map((caseItem, index) => (_jsxs("div", { className: "flex items-center justify-between bg-gray-600 rounded p-3", children: [_jsxs("div", { children: [_jsx("div", { className: "font-medium text-white", children: caseItem.id }), _jsxs("div", { className: "text-sm text-gray-300", children: [caseItem.date, " - ", caseItem.type] })] }), _jsxs("div", { className: "text-right", children: [_jsxs("div", { className: "text-sm text-gray-300", children: ["Outcome: ", caseItem.outcome] }), _jsx("div", { className: "text-sm text-green-400", children: caseItem.status })] }), _jsxs(Button, { size: "sm", className: "bg-blue-600 hover:bg-blue-700", children: [_jsx(Eye, { className: "h-3 w-3 mr-1" }), "View"] })] }, index))) })] }), _jsxs("div", { className: "bg-gray-700 rounded-lg p-4", children: [_jsx("h3", { className: "font-semibold text-white mb-3", children: "Search Archives" }), _jsxs("div", { className: "grid grid-cols-2 gap-4", children: [_jsxs("div", { children: [_jsx("label", { className: "block text-sm text-gray-300 mb-1", children: "Case ID" }), _jsx("input", { type: "text", className: "bg-gray-600 text-white border border-gray-500 rounded px-2 py-1 w-full", placeholder: "CA-2025-..." })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm text-gray-300 mb-1", children: "Date Range" }), _jsx("input", { type: "date", className: "bg-gray-600 text-white border border-gray-500 rounded px-2 py-1 w-full" })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm text-gray-300 mb-1", children: "Case Type" }), _jsxs("select", { className: "bg-gray-600 text-white border border-gray-500 rounded px-2 py-1 w-full", children: [_jsx("option", { children: "All Types" }), _jsx("option", { children: "Cardiac Arrest" }), _jsx("option", { children: "Trauma" }), _jsx("option", { children: "Respiratory" }), _jsx("option", { children: "Overdose" }), _jsx("option", { children: "Stroke" })] })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm text-gray-300 mb-1", children: "Outcome" }), _jsxs("select", { className: "bg-gray-600 text-white border border-gray-500 rounded px-2 py-1 w-full", children: [_jsx("option", { children: "All Outcomes" }), _jsx("option", { children: "ROSC" }), _jsx("option", { children: "Stable" }), _jsx("option", { children: "Improved" }), _jsx("option", { children: "Transported" })] })] })] })] }), _jsxs("div", { className: "flex justify-between", children: [_jsx(Button, { variant: "outline", className: "border-gray-600 text-gray-300 hover:bg-gray-700", onClick: () => setShowCaseArchives(false), children: "\u2190 Back to Field Tools" }), _jsxs("div", { className: "space-x-2", children: [_jsx(Button, { variant: "outline", className: "border-gray-600 text-gray-300 hover:bg-gray-700", onClick: () => setShowCaseArchives(false), children: "Close" }), _jsxs(Button, { className: "bg-blue-600 text-white hover:bg-blue-700", children: [_jsx(Search, { className: "h-4 w-4 mr-2" }), "Search Cases"] })] })] })] })] }) })), showPerformanceAnalytics && (_jsx(Dialog, { open: showPerformanceAnalytics, onOpenChange: setShowPerformanceAnalytics, children: _jsxs(DialogContent, { className: "bg-gray-800 text-white border-gray-700 max-w-5xl", children: [_jsx(DialogHeader, { children: _jsx(DialogTitle, { className: "text-white", children: "Performance Analytics Dashboard" }) }), _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "grid grid-cols-4 gap-4", children: [_jsxs("div", { className: "bg-gray-700 rounded-lg p-4", children: [_jsx("h3", { className: "font-semibold text-white mb-2", children: "Response Time" }), _jsx("div", { className: "text-2xl font-bold text-green-400", children: "8.5 min" }), _jsx("div", { className: "text-sm text-gray-400", children: "Avg this month" }), _jsx("div", { className: "text-xs text-green-400", children: "\u2193 12% from last month" })] }), _jsxs("div", { className: "bg-gray-700 rounded-lg p-4", children: [_jsx("h3", { className: "font-semibold text-white mb-2", children: "Call Volume" }), _jsx("div", { className: "text-2xl font-bold text-blue-400", children: "247" }), _jsx("div", { className: "text-sm text-gray-400", children: "Calls this month" }), _jsx("div", { className: "text-xs text-blue-400", children: "\u2191 8% from last month" })] }), _jsxs("div", { className: "bg-gray-700 rounded-lg p-4", children: [_jsx("h3", { className: "font-semibold text-white mb-2", children: "Success Rate" }), _jsx("div", { className: "text-2xl font-bold text-green-400", children: "94.2%" }), _jsx("div", { className: "text-sm text-gray-400", children: "Positive outcomes" }), _jsx("div", { className: "text-xs text-green-400", children: "\u2191 2% from last month" })] }), _jsxs("div", { className: "bg-gray-700 rounded-lg p-4", children: [_jsx("h3", { className: "font-semibold text-white mb-2", children: "Protocol Compliance" }), _jsx("div", { className: "text-2xl font-bold text-green-400", children: "98.1%" }), _jsx("div", { className: "text-sm text-gray-400", children: "Adherence rate" }), _jsx("div", { className: "text-xs text-green-400", children: "\u2191 1% from last month" })] })] }), _jsxs("div", { className: "grid grid-cols-2 gap-4", children: [_jsxs("div", { className: "bg-gray-700 rounded-lg p-4", children: [_jsx("h3", { className: "font-semibold text-white mb-3", children: "Call Type Breakdown" }), _jsx("div", { className: "space-y-2", children: [
                                                        { type: "Cardiac", count: 67, percentage: 27, color: "bg-red-500" },
                                                        { type: "Trauma", count: 52, percentage: 21, color: "bg-orange-500" },
                                                        { type: "Respiratory", count: 45, percentage: 18, color: "bg-blue-500" },
                                                        { type: "Medical", count: 38, percentage: 15, color: "bg-green-500" },
                                                        { type: "Psychiatric", count: 28, percentage: 11, color: "bg-purple-500" },
                                                        { type: "Other", count: 17, percentage: 7, color: "bg-gray-500" }
                                                    ].map((item, index) => (_jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { className: "flex items-center space-x-2", children: [_jsx("div", { className: `w-3 h-3 rounded ${item.color}` }), _jsx("span", { className: "text-gray-300", children: item.type })] }), _jsxs("div", { className: "text-right", children: [_jsx("span", { className: "text-white font-medium", children: item.count }), _jsxs("span", { className: "text-gray-400 text-sm ml-2", children: ["(", item.percentage, "%)"] })] })] }, index))) })] }), _jsxs("div", { className: "bg-gray-700 rounded-lg p-4", children: [_jsx("h3", { className: "font-semibold text-white mb-3", children: "Performance Trends" }), _jsxs("div", { className: "space-y-3", children: [_jsxs("div", { children: [_jsxs("div", { className: "flex justify-between mb-1", children: [_jsx("span", { className: "text-gray-300", children: "Response Time Target" }), _jsx("span", { className: "text-green-400", children: "8 min or less" })] }), _jsx("div", { className: "w-full bg-gray-600 rounded-full h-2", children: _jsx("div", { className: "bg-green-400 h-2 rounded-full w-[85%]" }) }), _jsx("div", { className: "text-xs text-gray-400 mt-1", children: "85% of calls met target" })] }), _jsxs("div", { children: [_jsxs("div", { className: "flex justify-between mb-1", children: [_jsx("span", { className: "text-gray-300", children: "Protocol Adherence" }), _jsx("span", { className: "text-green-400", children: "95% or higher" })] }), _jsx("div", { className: "w-full bg-gray-600 rounded-full h-2", children: _jsx("div", { className: "bg-green-400 h-2 rounded-full w-[98%]" }) }), _jsx("div", { className: "text-xs text-gray-400 mt-1", children: "98% adherence rate" })] }), _jsxs("div", { children: [_jsxs("div", { className: "flex justify-between mb-1", children: [_jsx("span", { className: "text-gray-300", children: "Patient Satisfaction" }), _jsx("span", { className: "text-green-400", children: "90% or higher" })] }), _jsx("div", { className: "w-full bg-gray-600 rounded-full h-2", children: _jsx("div", { className: "bg-green-400 h-2 rounded-full w-[94%]" }) }), _jsx("div", { className: "text-xs text-gray-400 mt-1", children: "94% satisfaction score" })] })] })] })] }), _jsxs("div", { className: "bg-gray-700 rounded-lg p-4", children: [_jsx("h3", { className: "font-semibold text-white mb-3", children: "Recent Performance Highlights" }), _jsxs("div", { className: "grid grid-cols-3 gap-4", children: [_jsxs("div", { className: "bg-gray-600 rounded p-3", children: [_jsxs("div", { className: "flex items-center space-x-2 mb-2", children: [_jsx(CheckCircle, { className: "h-4 w-4 text-green-400" }), _jsx("span", { className: "text-green-400 text-sm font-medium", children: "Achievement" })] }), _jsx("p", { className: "text-white text-sm", children: "Achieved 100% protocol compliance for 5 consecutive days" }), _jsx("p", { className: "text-gray-400 text-xs mt-1", children: "Jan 9-13, 2025" })] }), _jsxs("div", { className: "bg-gray-600 rounded p-3", children: [_jsxs("div", { className: "flex items-center space-x-2 mb-2", children: [_jsx(TrendingUp, { className: "h-4 w-4 text-blue-400" }), _jsx("span", { className: "text-blue-400 text-sm font-medium", children: "Improvement" })] }), _jsx("p", { className: "text-white text-sm", children: "Response time improved by 15% compared to last quarter" }), _jsx("p", { className: "text-gray-400 text-xs mt-1", children: "Q4 2024 vs Q1 2025" })] }), _jsxs("div", { className: "bg-gray-600 rounded p-3", children: [_jsxs("div", { className: "flex items-center space-x-2 mb-2", children: [_jsx(Star, { className: "h-4 w-4 text-yellow-400" }), _jsx("span", { className: "text-yellow-400 text-sm font-medium", children: "Recognition" })] }), _jsx("p", { className: "text-white text-sm", children: "Recognized for excellence in pediatric emergency care" }), _jsx("p", { className: "text-gray-400 text-xs mt-1", children: "Clark County EMS Award" })] })] })] }), _jsxs("div", { className: "bg-gray-700 rounded-lg p-4", children: [_jsx("h3", { className: "font-semibold text-white mb-3", children: "Action Items" }), _jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex items-center justify-between bg-gray-600 rounded p-2", children: [_jsxs("div", { className: "flex items-center space-x-2", children: [_jsx(AlertTriangle, { className: "h-4 w-4 text-yellow-400" }), _jsx("span", { className: "text-white", children: "Review respiratory protocol adherence" })] }), _jsx(Button, { size: "sm", className: "bg-yellow-600 hover:bg-yellow-700", children: "Review" })] }), _jsxs("div", { className: "flex items-center justify-between bg-gray-600 rounded p-2", children: [_jsxs("div", { className: "flex items-center space-x-2", children: [_jsx(Info, { className: "h-4 w-4 text-blue-400" }), _jsx("span", { className: "text-white", children: "Complete monthly training module" })] }), _jsx(Button, { size: "sm", className: "bg-blue-600 hover:bg-blue-700", children: "Start" })] }), _jsxs("div", { className: "flex items-center justify-between bg-gray-600 rounded p-2", children: [_jsxs("div", { className: "flex items-center space-x-2", children: [_jsx(CheckCircle, { className: "h-4 w-4 text-green-400" }), _jsx("span", { className: "text-white", children: "Update equipment maintenance log" })] }), _jsx(Button, { size: "sm", className: "bg-green-600 hover:bg-green-700", children: "Complete" })] })] })] }), _jsxs("div", { className: "flex justify-between", children: [_jsx(Button, { variant: "outline", className: "border-gray-600 text-gray-300 hover:bg-gray-700", onClick: () => setShowPerformanceAnalytics(false), children: "\u2190 Back to Field Tools" }), _jsxs("div", { className: "space-x-2", children: [_jsx(Button, { variant: "outline", className: "border-gray-600 text-gray-300 hover:bg-gray-700", onClick: () => setShowPerformanceAnalytics(false), children: "Close" }), _jsxs(Button, { className: "bg-blue-600 text-white hover:bg-blue-700", children: [_jsx(Download, { className: "h-4 w-4 mr-2" }), "Export Report"] })] })] })] })] }) })), showPerformanceTrends && (_jsx(Dialog, { open: showPerformanceTrends, onOpenChange: setShowPerformanceTrends, children: _jsxs(DialogContent, { className: "bg-gray-800 text-white border-gray-700 max-w-4xl max-h-[90vh] overflow-y-auto", children: [_jsx(DialogHeader, { children: _jsx(DialogTitle, { className: "text-white", children: "Performance Trends Analysis" }) }), _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "bg-gray-700 rounded-lg p-4", children: [_jsx("h3", { className: "font-semibold text-white mb-3", children: "Response Time Trends" }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-3 gap-4", children: [_jsxs("div", { className: "bg-green-900/20 rounded p-3 border border-green-700", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("p", { className: "text-green-300 text-sm", children: "Current Average" }), _jsx("p", { className: "text-white font-bold text-xl", children: "7.2 min" })] }), _jsx(TrendingUp, { className: "h-8 w-8 text-green-400" })] }), _jsx("p", { className: "text-green-300 text-xs mt-1", children: "\u2193 3.2% vs last month" })] }), _jsxs("div", { className: "bg-blue-900/20 rounded p-3 border border-blue-700", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("p", { className: "text-blue-300 text-sm", children: "30-Day Average" }), _jsx("p", { className: "text-white font-bold text-xl", children: "7.5 min" })] }), _jsx(BarChart3, { className: "h-8 w-8 text-blue-400" })] }), _jsx("p", { className: "text-blue-300 text-xs mt-1", children: "Target: <7.0 min" })] }), _jsxs("div", { className: "bg-purple-900/20 rounded p-3 border border-purple-700", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("p", { className: "text-purple-300 text-sm", children: "Best Time" }), _jsx("p", { className: "text-white font-bold text-xl", children: "4.1 min" })] }), _jsx(Timer, { className: "h-8 w-8 text-purple-400" })] }), _jsx("p", { className: "text-purple-300 text-xs mt-1", children: "This week record" })] })] })] }), _jsxs("div", { className: "bg-gray-700 rounded-lg p-4", children: [_jsx("h3", { className: "font-semibold text-white mb-3", children: "Call Volume Trends" }), _jsxs("div", { className: "space-y-3", children: [_jsxs("div", { className: "flex items-center justify-between p-2 bg-gray-600 rounded", children: [_jsx("span", { className: "text-white font-medium", children: "Priority 1 Calls" }), _jsxs("div", { className: "flex items-center space-x-2", children: [_jsx("div", { className: "w-24 bg-gray-500 rounded-full h-2", children: _jsx("div", { className: "bg-red-400 h-2 rounded-full w-[85%]" }) }), _jsx("span", { className: "text-red-300 font-bold", children: "85%" })] })] }), _jsxs("div", { className: "flex items-center justify-between p-2 bg-gray-600 rounded", children: [_jsx("span", { className: "text-white font-medium", children: "Priority 2 Calls" }), _jsxs("div", { className: "flex items-center space-x-2", children: [_jsx("div", { className: "w-24 bg-gray-500 rounded-full h-2", children: _jsx("div", { className: "bg-yellow-400 h-2 rounded-full w-[65%]" }) }), _jsx("span", { className: "text-yellow-300 font-bold", children: "65%" })] })] }), _jsxs("div", { className: "flex items-center justify-between p-2 bg-gray-600 rounded", children: [_jsx("span", { className: "text-white font-medium", children: "Priority 3 Calls" }), _jsxs("div", { className: "flex items-center space-x-2", children: [_jsx("div", { className: "w-24 bg-gray-500 rounded-full h-2", children: _jsx("div", { className: "bg-green-400 h-2 rounded-full w-[92%]" }) }), _jsx("span", { className: "text-green-300 font-bold", children: "92%" })] })] })] })] }), _jsxs("div", { className: "bg-gray-700 rounded-lg p-4", children: [_jsx("h3", { className: "font-semibold text-white mb-3", children: "Quality Metrics Trends" }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-4", children: [_jsxs("div", { className: "bg-gray-600 rounded p-3", children: [_jsxs("div", { className: "flex items-center justify-between mb-2", children: [_jsx("span", { className: "text-gray-300", children: "Patient Satisfaction" }), _jsx("span", { className: "text-green-300 font-bold", children: "94.8%" })] }), _jsx("div", { className: "w-full bg-gray-500 rounded-full h-2", children: _jsx("div", { className: "bg-green-400 h-2 rounded-full w-[95%]" }) }), _jsx("p", { className: "text-green-300 text-xs mt-1", children: "\u2191 2.1% improvement" })] }), _jsxs("div", { className: "bg-gray-600 rounded p-3", children: [_jsxs("div", { className: "flex items-center justify-between mb-2", children: [_jsx("span", { className: "text-gray-300", children: "Protocol Adherence" }), _jsx("span", { className: "text-green-300 font-bold", children: "98.2%" })] }), _jsx("div", { className: "w-full bg-gray-500 rounded-full h-2", children: _jsx("div", { className: "bg-green-400 h-2 rounded-full w-[98%]" }) }), _jsx("p", { className: "text-green-300 text-xs mt-1", children: "\u2191 1.3% improvement" })] })] })] }), _jsxs("div", { className: "bg-gray-700 rounded-lg p-4", children: [_jsx("h3", { className: "font-semibold text-white mb-3", children: "Monthly Performance Goals" }), _jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex items-center justify-between bg-green-900/20 rounded p-2 border border-green-700", children: [_jsxs("div", { className: "flex items-center space-x-2", children: [_jsx(CheckCircle, { className: "h-4 w-4 text-green-400" }), _jsx("span", { className: "text-white", children: "Response time under 7.5 minutes" })] }), _jsx("span", { className: "text-green-300 font-bold", children: "Achieved" })] }), _jsxs("div", { className: "flex items-center justify-between bg-yellow-900/20 rounded p-2 border border-yellow-700", children: [_jsxs("div", { className: "flex items-center space-x-2", children: [_jsx(Clock, { className: "h-4 w-4 text-yellow-400" }), _jsx("span", { className: "text-white", children: "95% patient satisfaction rate" })] }), _jsx("span", { className: "text-yellow-300 font-bold", children: "In Progress" })] }), _jsxs("div", { className: "flex items-center justify-between bg-blue-900/20 rounded p-2 border border-blue-700", children: [_jsxs("div", { className: "flex items-center space-x-2", children: [_jsx(Target, { className: "h-4 w-4 text-blue-400" }), _jsx("span", { className: "text-white", children: "Zero critical protocol deviations" })] }), _jsx("span", { className: "text-blue-300 font-bold", children: "Target" })] })] })] }), _jsxs("div", { className: "flex justify-between", children: [_jsx(Button, { variant: "outline", className: "border-gray-600 text-gray-300 hover:bg-gray-700", onClick: () => setShowPerformanceTrends(false), children: "\u2190 Back to Field Tools" }), _jsxs("div", { className: "space-x-2", children: [_jsx(Button, { variant: "outline", className: "border-gray-600 text-gray-300 hover:bg-gray-700", onClick: () => setShowPerformanceTrends(false), children: "Close" }), _jsxs(Button, { className: "bg-blue-600 text-white hover:bg-blue-700", children: [_jsx(Download, { className: "h-4 w-4 mr-2" }), "Export Trends Report"] })] })] })] })] }) })), showComplianceTracking && (_jsx(Dialog, { open: showComplianceTracking, onOpenChange: setShowComplianceTracking, children: _jsxs(DialogContent, { className: "bg-gray-800 text-white border-gray-700 max-w-4xl max-h-[90vh] overflow-y-auto", children: [_jsx(DialogHeader, { children: _jsx(DialogTitle, { className: "text-white", children: "Compliance Tracking Dashboard" }) }), _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "bg-gray-700 rounded-lg p-4", children: [_jsx("h3", { className: "font-semibold text-white mb-3", children: "Overall Compliance Status" }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-3 gap-4", children: [_jsxs("div", { className: "bg-green-900/20 rounded p-3 border border-green-700", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("p", { className: "text-green-300 text-sm", children: "Protocol Compliance" }), _jsx("p", { className: "text-white font-bold text-xl", children: "98.2%" })] }), _jsx(CheckCircle, { className: "h-8 w-8 text-green-400" })] }), _jsx("p", { className: "text-green-300 text-xs mt-1", children: "2 minor deviations this month" })] }), _jsxs("div", { className: "bg-blue-900/20 rounded p-3 border border-blue-700", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("p", { className: "text-blue-300 text-sm", children: "Documentation" }), _jsx("p", { className: "text-white font-bold text-xl", children: "96.7%" })] }), _jsx(FileText, { className: "h-8 w-8 text-blue-400" })] }), _jsx("p", { className: "text-blue-300 text-xs mt-1", children: "Complete within 24hrs" })] }), _jsxs("div", { className: "bg-yellow-900/20 rounded p-3 border border-yellow-700", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("p", { className: "text-yellow-300 text-sm", children: "Training Current" }), _jsx("p", { className: "text-white font-bold text-xl", children: "94.1%" })] }), _jsx(Users, { className: "h-8 w-8 text-yellow-400" })] }), _jsx("p", { className: "text-yellow-300 text-xs mt-1", children: "3 pending certifications" })] })] })] }), _jsxs("div", { className: "bg-gray-700 rounded-lg p-4", children: [_jsx("h3", { className: "font-semibold text-white mb-3", children: "Protocol Adherence by Category" }), _jsxs("div", { className: "space-y-3", children: [_jsxs("div", { className: "flex items-center justify-between p-2 bg-gray-600 rounded", children: [_jsx("span", { className: "text-white font-medium", children: "Cardiac Protocols" }), _jsxs("div", { className: "flex items-center space-x-2", children: [_jsx("div", { className: "w-32 bg-gray-500 rounded-full h-2", children: _jsx("div", { className: "bg-green-400 h-2 rounded-full w-[99%]" }) }), _jsx("span", { className: "text-green-300 font-bold", children: "99%" })] })] }), _jsxs("div", { className: "flex items-center justify-between p-2 bg-gray-600 rounded", children: [_jsx("span", { className: "text-white font-medium", children: "Respiratory Protocols" }), _jsxs("div", { className: "flex items-center space-x-2", children: [_jsx("div", { className: "w-32 bg-gray-500 rounded-full h-2", children: _jsx("div", { className: "bg-yellow-400 h-2 rounded-full w-[95%]" }) }), _jsx("span", { className: "text-yellow-300 font-bold", children: "95%" })] })] }), _jsxs("div", { className: "flex items-center justify-between p-2 bg-gray-600 rounded", children: [_jsx("span", { className: "text-white font-medium", children: "Trauma Protocols" }), _jsxs("div", { className: "flex items-center space-x-2", children: [_jsx("div", { className: "w-32 bg-gray-500 rounded-full h-2", children: _jsx("div", { className: "bg-green-400 h-2 rounded-full w-[98%]" }) }), _jsx("span", { className: "text-green-300 font-bold", children: "98%" })] })] }), _jsxs("div", { className: "flex items-center justify-between p-2 bg-gray-600 rounded", children: [_jsx("span", { className: "text-white font-medium", children: "Medication Protocols" }), _jsxs("div", { className: "flex items-center space-x-2", children: [_jsx("div", { className: "w-32 bg-gray-500 rounded-full h-2", children: _jsx("div", { className: "bg-green-400 h-2 rounded-full w-[97%]" }) }), _jsx("span", { className: "text-green-300 font-bold", children: "97%" })] })] })] })] }), _jsxs("div", { className: "bg-gray-700 rounded-lg p-4", children: [_jsx("h3", { className: "font-semibold text-white mb-3", children: "Recent Compliance Issues" }), _jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex items-center justify-between bg-yellow-900/20 rounded p-2 border border-yellow-700", children: [_jsxs("div", { className: "flex items-center space-x-2", children: [_jsx(AlertTriangle, { className: "h-4 w-4 text-yellow-400" }), _jsxs("div", { children: [_jsx("span", { className: "text-white font-medium", children: "Medication documentation delay" }), _jsx("p", { className: "text-gray-300 text-xs", children: "Case #2847 - 48hr delay in completion" })] })] }), _jsxs("div", { className: "flex space-x-2", children: [_jsx(Button, { size: "sm", className: "bg-yellow-600 hover:bg-yellow-700", children: "Review" }), _jsx(Button, { size: "sm", variant: "outline", className: "border-yellow-600 text-yellow-300", children: "Dismiss" })] })] }), _jsxs("div", { className: "flex items-center justify-between bg-red-900/20 rounded p-2 border border-red-700", children: [_jsxs("div", { className: "flex items-center space-x-2", children: [_jsx(XCircle, { className: "h-4 w-4 text-red-400" }), _jsxs("div", { children: [_jsx("span", { className: "text-white font-medium", children: "Protocol deviation - respiratory" }), _jsx("p", { className: "text-gray-300 text-xs", children: "Case #2831 - Alternative intervention used" })] })] }), _jsxs("div", { className: "flex space-x-2", children: [_jsx(Button, { size: "sm", className: "bg-red-600 hover:bg-red-700", children: "Investigate" }), _jsx(Button, { size: "sm", variant: "outline", className: "border-red-600 text-red-300", children: "Report" })] })] })] })] }), _jsxs("div", { className: "bg-gray-700 rounded-lg p-4", children: [_jsx("h3", { className: "font-semibold text-white mb-3", children: "Compliance Certifications" }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-4", children: [_jsxs("div", { className: "bg-gray-600 rounded p-3", children: [_jsxs("div", { className: "flex items-center justify-between mb-2", children: [_jsx("span", { className: "text-gray-300", children: "BLS Certification" }), _jsx("span", { className: "text-green-300 font-bold", children: "Current" })] }), _jsx("p", { className: "text-gray-300 text-sm", children: "Expires: 06/15/2025" }), _jsx("p", { className: "text-green-300 text-xs", children: "\u2713 Renewed automatically" })] }), _jsxs("div", { className: "bg-gray-600 rounded p-3", children: [_jsxs("div", { className: "flex items-center justify-between mb-2", children: [_jsx("span", { className: "text-gray-300", children: "ACLS Certification" }), _jsx("span", { className: "text-yellow-300 font-bold", children: "Expiring Soon" })] }), _jsx("p", { className: "text-gray-300 text-sm", children: "Expires: 02/28/2025" }), _jsx("p", { className: "text-yellow-300 text-xs", children: "\u26A0 Renewal required" })] }), _jsxs("div", { className: "bg-gray-600 rounded p-3", children: [_jsxs("div", { className: "flex items-center justify-between mb-2", children: [_jsx("span", { className: "text-gray-300", children: "PALS Certification" }), _jsx("span", { className: "text-green-300 font-bold", children: "Current" })] }), _jsx("p", { className: "text-gray-300 text-sm", children: "Expires: 09/10/2025" }), _jsx("p", { className: "text-green-300 text-xs", children: "\u2713 Valid through 2025" })] }), _jsxs("div", { className: "bg-gray-600 rounded p-3", children: [_jsxs("div", { className: "flex items-center justify-between mb-2", children: [_jsx("span", { className: "text-gray-300", children: "State EMS License" }), _jsx("span", { className: "text-green-300 font-bold", children: "Current" })] }), _jsx("p", { className: "text-gray-300 text-sm", children: "Expires: 12/31/2025" }), _jsx("p", { className: "text-green-300 text-xs", children: "\u2713 Nevada licensed" })] })] })] }), _jsxs("div", { className: "flex justify-between", children: [_jsx(Button, { variant: "outline", className: "border-gray-600 text-gray-300 hover:bg-gray-700", onClick: () => setShowComplianceTracking(false), children: "\u2190 Back to Field Tools" }), _jsxs("div", { className: "space-x-2", children: [_jsx(Button, { variant: "outline", className: "border-gray-600 text-gray-300 hover:bg-gray-700", onClick: () => setShowComplianceTracking(false), children: "Close" }), _jsxs(Button, { className: "bg-blue-600 text-white hover:bg-blue-700", children: [_jsx(Download, { className: "h-4 w-4 mr-2" }), "Export Compliance Report"] })] })] })] })] }) }))] }));
}
