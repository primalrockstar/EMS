import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { useState } from "react";
import { useQuery } from "@tanstack/react-query";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from "@/components/ui/dialog";
import { ScrollArea } from "@/components/ui/scroll-area";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { BookOpen, Play, CheckCircle, GraduationCap, Heart, Shield, Baby, AlertTriangle, Zap, Activity, Eye, Trophy, FileText, Brain, Users, Briefcase, Lock, Calculator, Pill } from "lucide-react";
import ScenarioViewer from "@/components/scenario-viewer";
import PatientSimulator from "@/components/patient-simulator";
import AnatomyExplorer from "@/components/anatomy-explorer";
import LearningPaths from "@/components/learning-paths";
import StudyNotes from "@/components/study-notes";
import FlashcardViewer from "@/components/flashcard-viewer-fixed";
import { useUserTier } from "@/hooks/useUserTier";
import { useLocation } from "wouter";
import NremtPracticeModule from "@/components/nremt-practice-module";
import PCRDocumentationApp from "@/components/pcr-documentation-app";
export default function Learning() {
    const [selectedModule, setSelectedModule] = useState(null);
    const [selectedGuide, setSelectedGuide] = useState(null);
    const [scenarioViewerOpen, setScenarioViewerOpen] = useState(false);
    const [patientSimulatorOpen, setPatientSimulatorOpen] = useState(false);
    const [anatomyExplorerOpen, setAnatomyExplorerOpen] = useState(false);
    const [learningPathsOpen, setLearningPathsOpen] = useState(false);
    const [studyNotesOpen, setStudyNotesOpen] = useState(false);
    const [flashcardViewerOpen, setFlashcardViewerOpen] = useState(false);
    const [nremtPracticeOpen, setNremtPracticeOpen] = useState(false);
    const [pcrDocumentationOpen, setPcrDocumentationOpen] = useState(false);
    const { userTier, switchTier, isBasic, isPro } = useUserTier();
    const [, setLocation] = useLocation();
    const { data: modules, isLoading } = useQuery({
        queryKey: ["/api/learning-modules"],
        enabled: isBasic, // Only load modules for Basic tier
    });
    // Filter modules by type - Pro tier has no learning modules
    const basicModules = modules?.filter((module) => module.moduleNumber === 0) || [];
    const getGuideIcon = (title) => {
        if (title.includes("First Aid"))
            return _jsx(Shield, { className: "h-5 w-5" });
        if (title.includes("Adult CPR"))
            return _jsx(Heart, { className: "h-5 w-5" });
        if (title.includes("Pediatric"))
            return _jsx(Baby, { className: "h-5 w-5" });
        return _jsx(BookOpen, { className: "h-5 w-5" });
    };
    const getGuideColor = (title) => {
        if (title.includes("First Aid"))
            return "bg-green-500";
        if (title.includes("Adult CPR"))
            return "bg-red-500";
        if (title.includes("Pediatric"))
            return "bg-blue-500";
        return "bg-gray-500";
    };
    const renderGuideContent = (guide) => {
        if (!guide.content)
            return null;
        const content = typeof guide.content === 'string' ? JSON.parse(guide.content) : guide.content;
        if (guide.title.includes("First Aid")) {
            return (_jsxs("div", { className: "space-y-6", children: [_jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-4", children: [_jsxs(Card, { children: [_jsx(CardHeader, { children: _jsxs(CardTitle, { className: "flex items-center text-lg", children: [_jsx(AlertTriangle, { className: "h-5 w-5 mr-2 text-red-500" }), "When to Call 911"] }) }), _jsx(CardContent, { children: _jsx("p", { className: "text-sm", children: content.when911 }) })] }), _jsxs(Card, { children: [_jsx(CardHeader, { children: _jsxs(CardTitle, { className: "flex items-center text-lg", children: [_jsx(Shield, { className: "h-5 w-5 mr-2 text-blue-500" }), "Primary Assessment"] }) }), _jsx(CardContent, { children: _jsx("p", { className: "text-sm", children: content.emergencyPriorities }) })] })] }), _jsxs(Tabs, { defaultValue: "bleeding", className: "w-full", children: [_jsxs(TabsList, { className: "grid w-full grid-cols-4", children: [_jsx(TabsTrigger, { value: "bleeding", children: "Bleeding" }), _jsx(TabsTrigger, { value: "burns", children: "Burns" }), _jsx(TabsTrigger, { value: "choking", children: "Choking" }), _jsx(TabsTrigger, { value: "emergencies", children: "Emergencies" })] }), _jsxs(TabsContent, { value: "bleeding", className: "space-y-4", children: [_jsxs(Card, { children: [_jsx(CardHeader, { children: _jsx(CardTitle, { children: "Minor Cuts" }) }), _jsx(CardContent, { children: _jsx("p", { className: "text-sm", children: content.bleeding.minor }) })] }), _jsxs(Card, { children: [_jsx(CardHeader, { children: _jsx(CardTitle, { children: "Severe Bleeding" }) }), _jsx(CardContent, { children: _jsx("p", { className: "text-sm", children: content.bleeding.severe }) })] }), _jsxs(Card, { children: [_jsx(CardHeader, { children: _jsx(CardTitle, { children: "Nosebleeds" }) }), _jsx(CardContent, { children: _jsx("p", { className: "text-sm", children: content.bleeding.nosebleeds }) })] })] }), _jsxs(TabsContent, { value: "burns", className: "space-y-4", children: [_jsxs(Card, { children: [_jsx(CardHeader, { children: _jsx(CardTitle, { children: "First-Degree Burns" }) }), _jsx(CardContent, { children: _jsx("p", { className: "text-sm", children: content.burns.firstDegree }) })] }), _jsxs(Card, { children: [_jsx(CardHeader, { children: _jsx(CardTitle, { children: "Second-Degree Burns" }) }), _jsx(CardContent, { children: _jsx("p", { className: "text-sm", children: content.burns.secondDegree }) })] }), _jsxs(Card, { children: [_jsx(CardHeader, { children: _jsx(CardTitle, { children: "Third-Degree Burns" }) }), _jsx(CardContent, { children: _jsx("p", { className: "text-sm", children: content.burns.thirdDegree }) })] })] }), _jsxs(TabsContent, { value: "choking", className: "space-y-4", children: [_jsxs(Card, { children: [_jsx(CardHeader, { children: _jsx(CardTitle, { children: "Adult Choking" }) }), _jsx(CardContent, { children: _jsx("p", { className: "text-sm", children: content.choking.adult }) })] }), _jsxs(Card, { children: [_jsx(CardHeader, { children: _jsx(CardTitle, { children: "Infant Choking" }) }), _jsx(CardContent, { children: _jsx("p", { className: "text-sm", children: content.choking.infant }) })] }), _jsxs(Card, { children: [_jsx(CardHeader, { children: _jsx(CardTitle, { children: "Unconscious Choking" }) }), _jsx(CardContent, { children: _jsx("p", { className: "text-sm", children: content.choking.unconscious }) })] })] }), _jsxs(TabsContent, { value: "emergencies", className: "space-y-4", children: [_jsxs(Card, { children: [_jsx(CardHeader, { children: _jsx(CardTitle, { children: "Heart Attack" }) }), _jsx(CardContent, { children: _jsx("p", { className: "text-sm", children: content.heartAttack }) })] }), _jsxs(Card, { children: [_jsx(CardHeader, { children: _jsx(CardTitle, { children: "Stroke (FAST)" }) }), _jsx(CardContent, { children: _jsx("p", { className: "text-sm", children: content.stroke }) })] }), _jsxs(Card, { children: [_jsx(CardHeader, { children: _jsx(CardTitle, { children: "Allergic Reactions" }) }), _jsxs(CardContent, { children: [_jsxs("p", { className: "text-sm", children: [_jsx("strong", { children: "Mild:" }), " ", content.allergicReactions.mild] }), _jsxs("p", { className: "text-sm mt-2", children: [_jsx("strong", { children: "Severe:" }), " ", content.allergicReactions.severe] })] })] })] })] })] }));
        }
        if (guide.title.includes("Adult CPR")) {
            return (_jsxs("div", { className: "space-y-6", children: [_jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-4", children: [_jsxs(Card, { children: [_jsx(CardHeader, { children: _jsxs(CardTitle, { className: "flex items-center text-lg", children: [_jsx(Heart, { className: "h-5 w-5 mr-2 text-red-500" }), "When to Use CPR"] }) }), _jsx(CardContent, { children: _jsx("p", { className: "text-sm", children: content.when }) })] }), _jsxs(Card, { children: [_jsx(CardHeader, { children: _jsxs(CardTitle, { className: "flex items-center text-lg", children: [_jsx(CheckCircle, { className: "h-5 w-5 mr-2 text-green-500" }), "Before You Begin"] }) }), _jsx(CardContent, { children: _jsx("p", { className: "text-sm", children: content.beforeBegin }) })] })] }), _jsxs(Tabs, { defaultValue: "technique", className: "w-full", children: [_jsxs(TabsList, { className: "grid w-full grid-cols-3", children: [_jsx(TabsTrigger, { value: "technique", children: "Technique" }), _jsx(TabsTrigger, { value: "breathing", children: "With Breathing" }), _jsx(TabsTrigger, { value: "aed", children: "AED Use" })] }), _jsxs(TabsContent, { value: "technique", className: "space-y-4", children: [_jsxs(Card, { children: [_jsx(CardHeader, { children: _jsx(CardTitle, { children: "Hand Placement" }) }), _jsx(CardContent, { children: _jsx("p", { className: "text-sm", children: content.handPlacement }) })] }), _jsxs(Card, { children: [_jsx(CardHeader, { children: _jsx(CardTitle, { children: "Compression Technique" }) }), _jsx(CardContent, { children: _jsx("p", { className: "text-sm", children: content.technique }) })] }), _jsxs(Card, { children: [_jsx(CardHeader, { children: _jsx(CardTitle, { children: "Hands-Only CPR" }) }), _jsx(CardContent, { children: _jsx("p", { className: "text-sm", children: content.handsOnly }) })] })] }), _jsxs(TabsContent, { value: "breathing", className: "space-y-4", children: [_jsxs(Card, { children: [_jsx(CardHeader, { children: _jsx(CardTitle, { children: "CPR with Rescue Breathing (30:2)" }) }), _jsx(CardContent, { children: _jsx("p", { className: "text-sm", children: content.withBreathing }) })] }), _jsxs(Card, { children: [_jsx(CardHeader, { children: _jsx(CardTitle, { children: "Important Reminders" }) }), _jsx(CardContent, { children: _jsx("p", { className: "text-sm", children: content.reminders }) })] })] }), _jsxs(TabsContent, { value: "aed", className: "space-y-4", children: [_jsxs(Card, { children: [_jsx(CardHeader, { children: _jsx(CardTitle, { children: "AED Steps" }) }), _jsx(CardContent, { children: _jsx("p", { className: "text-sm", children: content.aed }) })] }), _jsxs(Card, { children: [_jsx(CardHeader, { children: _jsx(CardTitle, { children: "Special Considerations" }) }), _jsx(CardContent, { children: _jsx("p", { className: "text-sm", children: content.specialConsiderations }) })] })] })] })] }));
        }
        if (guide.title.includes("Pediatric")) {
            return (_jsxs("div", { className: "space-y-6", children: [_jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-4", children: [_jsxs(Card, { children: [_jsx(CardHeader, { children: _jsxs(CardTitle, { className: "flex items-center text-lg", children: [_jsx(Baby, { className: "h-5 w-5 mr-2 text-blue-500" }), "Age Groups"] }) }), _jsx(CardContent, { children: _jsx("p", { className: "text-sm", children: content.ageGroups }) })] }), _jsxs(Card, { children: [_jsx(CardHeader, { children: _jsxs(CardTitle, { className: "flex items-center text-lg", children: [_jsx(AlertTriangle, { className: "h-5 w-5 mr-2 text-red-500" }), "When to Use CPR"] }) }), _jsx(CardContent, { children: _jsx("p", { className: "text-sm", children: content.when }) })] })] }), _jsxs(Tabs, { defaultValue: "infant", className: "w-full", children: [_jsxs(TabsList, { className: "grid w-full grid-cols-3", children: [_jsx(TabsTrigger, { value: "infant", children: "Infant CPR" }), _jsx(TabsTrigger, { value: "child", children: "Child CPR" }), _jsx(TabsTrigger, { value: "differences", children: "Key Differences" })] }), _jsxs(TabsContent, { value: "infant", className: "space-y-4", children: [_jsxs(Card, { children: [_jsx(CardHeader, { children: _jsx(CardTitle, { children: "Hand Placement" }) }), _jsx(CardContent, { children: _jsx("p", { className: "text-sm", children: content.infant.handPlacement }) })] }), _jsxs(Card, { children: [_jsx(CardHeader, { children: _jsx(CardTitle, { children: "Technique" }) }), _jsx(CardContent, { children: _jsx("p", { className: "text-sm", children: content.infant.technique }) })] }), _jsxs(Card, { children: [_jsx(CardHeader, { children: _jsx(CardTitle, { children: "Rescue Breaths" }) }), _jsx(CardContent, { children: _jsx("p", { className: "text-sm", children: content.infant.breaths }) })] })] }), _jsxs(TabsContent, { value: "child", className: "space-y-4", children: [_jsxs(Card, { children: [_jsx(CardHeader, { children: _jsx(CardTitle, { children: "Hand Placement" }) }), _jsx(CardContent, { children: _jsx("p", { className: "text-sm", children: content.child.handPlacement }) })] }), _jsxs(Card, { children: [_jsx(CardHeader, { children: _jsx(CardTitle, { children: "Technique" }) }), _jsx(CardContent, { children: _jsx("p", { className: "text-sm", children: content.child.technique }) })] }), _jsxs(Card, { children: [_jsx(CardHeader, { children: _jsx(CardTitle, { children: "Rescue Breaths" }) }), _jsx(CardContent, { children: _jsx("p", { className: "text-sm", children: content.child.breaths }) })] })] }), _jsxs(TabsContent, { value: "differences", className: "space-y-4", children: [_jsxs(Card, { children: [_jsx(CardHeader, { children: _jsx(CardTitle, { children: "Infant Differences" }) }), _jsx(CardContent, { children: _jsx("p", { className: "text-sm", children: content.differences }) })] }), _jsxs(Card, { children: [_jsx(CardHeader, { children: _jsx(CardTitle, { children: "AED Use" }) }), _jsx(CardContent, { children: _jsx("p", { className: "text-sm", children: content.aed }) })] }), _jsxs(Card, { children: [_jsx(CardHeader, { children: _jsx(CardTitle, { children: "Two-Person CPR" }) }), _jsx(CardContent, { children: _jsx("p", { className: "text-sm", children: content.twoPerson }) })] })] })] })] }));
        }
        return (_jsx("div", { className: "space-y-4", children: _jsx("p", { className: "text-sm text-muted-foreground", children: "Content available for this guide. Click to expand sections." }) }));
    };
    if (isLoading) {
        return (_jsx("div", { className: "max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8", children: _jsxs("div", { className: "text-center", children: [_jsx("div", { className: "animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto" }), _jsx("p", { className: "mt-2 text-muted-foreground", children: "Loading learning modules..." })] }) }));
    }
    return (_jsxs("div", { className: "max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8", children: [_jsxs("div", { className: "mb-8", children: [_jsx("h1", { className: "text-3xl font-bold mb-2", children: "EMS Learning Center" }), _jsx("p", { className: "text-muted-foreground", children: "Two-mode educational system: Basic for students, Pro for field professionals" }), _jsxs("div", { className: "mt-4 flex items-center gap-4", children: [_jsx("span", { className: "text-sm font-medium", children: "Current Mode:" }), _jsxs("div", { className: "flex bg-muted rounded-lg p-1", children: [_jsxs(Button, { variant: isBasic ? "default" : "ghost", size: "sm", onClick: () => {
                                            switchTier('basic');
                                            setLocation('/');
                                        }, className: isBasic ? "bg-blue-500 text-white hover:bg-blue-600" : "", children: [_jsx(Users, { className: "h-4 w-4 mr-2" }), "Basic (Student)"] }), _jsxs(Button, { variant: isPro ? "default" : "ghost", size: "sm", onClick: () => {
                                            switchTier('pro');
                                            setLocation('/pro');
                                        }, className: isPro ? "bg-green-500 text-white hover:bg-green-600" : "", children: [_jsx(Briefcase, { className: "h-4 w-4 mr-2" }), "Pro (Field Professional)"] })] })] })] }), isBasic ? (_jsxs("div", { className: "space-y-8", children: [_jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsxs(CardTitle, { className: "flex items-center", children: [_jsx(GraduationCap, { className: "h-5 w-5 mr-2" }), "Medical Reference Guides"] }), _jsx("p", { className: "text-sm text-muted-foreground", children: "Essential emergency medical reference guides for EMS students and professionals" })] }), _jsx(CardContent, { children: _jsx("div", { className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6", children: basicModules.map((guide) => (_jsxs(Card, { className: "hover:shadow-md transition-shadow", children: [_jsxs(CardHeader, { className: "pb-3", children: [_jsx("div", { className: "flex items-center justify-between", children: _jsxs(Badge, { className: `${getGuideColor(guide.title)} text-white`, children: [getGuideIcon(guide.title), _jsx("span", { className: "ml-1", children: "Reference Guide" })] }) }), _jsx(CardTitle, { className: "text-lg", children: guide.title }), _jsx("p", { className: "text-sm text-muted-foreground", children: guide.description })] }), _jsx(CardContent, { children: _jsxs("div", { className: "space-y-3", children: [_jsx("div", { className: "flex flex-wrap gap-1", children: guide.tags?.map((tag, index) => (_jsx(Badge, { variant: "outline", className: "text-xs", children: tag }, index))) }), _jsxs(Dialog, { children: [_jsx(DialogTrigger, { asChild: true, children: _jsxs(Button, { className: "w-full", onClick: () => setSelectedGuide(guide), children: [_jsx(BookOpen, { className: "h-4 w-4 mr-2" }), "View Guide"] }) }), _jsxs(DialogContent, { className: "max-w-4xl max-h-[90vh]", children: [_jsx(DialogHeader, { children: _jsxs(DialogTitle, { className: "flex items-center", children: [getGuideIcon(guide.title), _jsx("span", { className: "ml-2", children: guide.title })] }) }), _jsx(ScrollArea, { className: "h-[70vh]", children: _jsx("div", { className: "p-4", children: renderGuideContent(guide) }) })] })] })] }) })] }, guide.id))) }) })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsxs(CardTitle, { className: "flex items-center", children: [_jsx(Zap, { className: "h-5 w-5 mr-2" }), "Interactive Learning Tools"] }), _jsx("p", { className: "text-sm text-muted-foreground", children: "Practice with realistic scenarios and decision trees to build critical thinking skills" })] }), _jsx(CardContent, { children: _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-6 gap-4", children: [_jsxs(Button, { className: "h-20 flex flex-col items-center justify-center space-y-2", onClick: () => setScenarioViewerOpen(true), children: [_jsx(Play, { className: "h-6 w-6" }), _jsx("span", { children: "Case Scenarios" })] }), _jsxs(Button, { className: "h-20 flex flex-col items-center justify-center space-y-2", variant: "outline", onClick: () => setPatientSimulatorOpen(true), children: [_jsx(Activity, { className: "h-6 w-6" }), _jsx("span", { children: "Patient Simulations" })] }), _jsxs(Button, { className: "h-20 flex flex-col items-center justify-center space-y-2", variant: "outline", onClick: () => setAnatomyExplorerOpen(true), children: [_jsx(Eye, { className: "h-6 w-6" }), _jsx("span", { children: "Anatomy Explorer" })] }), _jsxs(Button, { className: "h-20 flex flex-col items-center justify-center space-y-2", variant: "outline", onClick: () => setLearningPathsOpen(true), children: [_jsx(Trophy, { className: "h-6 w-6" }), _jsx("span", { children: "Learning Paths" })] }), _jsxs(Button, { className: "h-20 flex flex-col items-center justify-center space-y-2", variant: "outline", onClick: () => setStudyNotesOpen(true), children: [_jsx(FileText, { className: "h-6 w-6" }), _jsx("span", { children: "Study Notes" })] }), _jsxs(Button, { className: "h-20 flex flex-col items-center justify-center space-y-2", variant: "outline", onClick: () => setFlashcardViewerOpen(true), children: [_jsx(Brain, { className: "h-6 w-6" }), _jsx("span", { children: "Flashcards" })] }), _jsxs(Button, { className: "h-20 flex flex-col items-center justify-center space-y-2", variant: "outline", onClick: () => setNremtPracticeOpen(true), children: [_jsx(GraduationCap, { className: "h-6 w-6" }), _jsx("span", { children: "NREMT Practice" })] }), _jsxs(Button, { className: "h-20 flex flex-col items-center justify-center space-y-2", variant: "outline", onClick: () => setPcrDocumentationOpen(true), children: [_jsx(FileText, { className: "h-6 w-6" }), _jsx("span", { children: "PCR Documentation" })] })] }) })] })] })) : (
            /* Pro Tier - No Learning Content */
            _jsx("div", { className: "space-y-8", children: _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsxs(CardTitle, { className: "flex items-center", children: [_jsx(Briefcase, { className: "h-5 w-5 mr-2" }), "Professional Field Tools"] }), _jsx("p", { className: "text-sm text-muted-foreground", children: "Advanced tools for field professionals - no educational content" })] }), _jsx(CardContent, { children: _jsxs("div", { className: "text-center py-12", children: [_jsx(Lock, { className: "h-16 w-16 mx-auto text-muted-foreground mb-4" }), _jsx("h3", { className: "text-xl font-semibold mb-2", children: "Pro Mode - Field Tools Only" }), _jsx("p", { className: "text-muted-foreground max-w-md mx-auto mb-6", children: "Pro mode provides field-ready tools and protocols without educational content. Access advanced calculators, protocol management, and professional references through the main navigation." }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 max-w-4xl mx-auto", children: [_jsxs("div", { className: "p-4 border rounded-lg", children: [_jsx(Calculator, { className: "h-8 w-8 mx-auto text-blue-500 mb-2" }), _jsx("h4", { className: "font-medium", children: "Advanced Calculators" }), _jsx("p", { className: "text-sm text-muted-foreground", children: "Field-ready medical calculators" })] }), _jsxs("div", { className: "p-4 border rounded-lg", children: [_jsx(FileText, { className: "h-8 w-8 mx-auto text-green-500 mb-2" }), _jsx("h4", { className: "font-medium", children: "Protocol Management" }), _jsx("p", { className: "text-sm text-muted-foreground", children: "Professional protocol tools" })] }), _jsxs("div", { className: "p-4 border rounded-lg", children: [_jsx(Pill, { className: "h-8 w-8 mx-auto text-red-500 mb-2" }), _jsx("h4", { className: "font-medium", children: "Medication Reference" }), _jsx("p", { className: "text-sm text-muted-foreground", children: "Quick drug reference" })] })] }), _jsx("div", { className: "mt-8", children: _jsxs(Button, { onClick: () => switchTier('basic'), className: "bg-blue-500 hover:bg-blue-600 text-white", children: [_jsx(Users, { className: "h-4 w-4 mr-2" }), "Switch to Basic for Educational Content"] }) })] }) })] }) })), isBasic && (_jsxs(_Fragment, { children: [_jsx(ScenarioViewer, { open: scenarioViewerOpen, onOpenChange: setScenarioViewerOpen }), _jsx(PatientSimulator, { open: patientSimulatorOpen, onOpenChange: setPatientSimulatorOpen }), _jsx(AnatomyExplorer, { open: anatomyExplorerOpen, onOpenChange: setAnatomyExplorerOpen }), _jsx(LearningPaths, { open: learningPathsOpen, onOpenChange: setLearningPathsOpen }), _jsx(StudyNotes, { open: studyNotesOpen, onOpenChange: setStudyNotesOpen }), _jsx(FlashcardViewer, { open: flashcardViewerOpen, onOpenChange: setFlashcardViewerOpen }), _jsx(NremtPracticeModule, { open: nremtPracticeOpen, onOpenChange: setNremtPracticeOpen }), _jsx(PCRDocumentationApp, { open: pcrDocumentationOpen, onOpenChange: setPcrDocumentationOpen })] }))] }));
}
