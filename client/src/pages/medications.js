import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from "react";
import { useQuery } from "@tanstack/react-query";
import { Card, CardContent } from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Badge } from "@/components/ui/badge";
import { Search, Pill, AlertTriangle, Info } from "lucide-react";
export default function Medications() {
    const [searchTerm, setSearchTerm] = useState("");
    const [categoryFilter, setCategoryFilter] = useState("all");
    const [scopeFilter, setScopeFilter] = useState("all");
    const { data: medications, isLoading } = useQuery({
        queryKey: ["/api/medications", { search: searchTerm, category: categoryFilter !== "all" ? categoryFilter : undefined, scope: scopeFilter !== "all" ? scopeFilter : undefined }],
        queryFn: async () => {
            const params = new URLSearchParams({
                ...(searchTerm && { search: searchTerm }),
                ...(categoryFilter !== "all" && { category: categoryFilter }),
                ...(scopeFilter !== "all" && { scope: scopeFilter }),
            });
            const response = await fetch(`/api/medications?${params}`);
            return response.json();
        },
    });
    const categoryColors = {
        cardiac: "bg-red-500",
        respiratory: "bg-blue-500",
        neurological: "bg-green-500",
        analgesic: "bg-purple-500",
        sedative: "bg-indigo-500",
        antibiotic: "bg-yellow-500",
    };
    return (_jsxs("div", { className: "max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8", children: [_jsxs("div", { className: "mb-8", children: [_jsx("h1", { className: "text-3xl font-bold mb-2", children: "Medication Reference" }), _jsx("p", { className: "text-muted-foreground", children: "Comprehensive EMS medication guide with dosages and contraindications" })] }), _jsx(Card, { className: "mb-6", children: _jsx(CardContent, { className: "p-6", children: _jsxs("div", { className: "flex flex-col sm:flex-row gap-4", children: [_jsxs("div", { className: "flex-1 relative", children: [_jsx(Search, { className: "absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-muted-foreground" }), _jsx(Input, { placeholder: "Search medications...", value: searchTerm, onChange: (e) => setSearchTerm(e.target.value), className: "pl-10" })] }), _jsxs(Select, { value: scopeFilter, onValueChange: setScopeFilter, children: [_jsx(SelectTrigger, { className: "w-full sm:w-48", children: _jsx(SelectValue, { placeholder: "All Scopes" }) }), _jsxs(SelectContent, { children: [_jsx(SelectItem, { value: "all", children: "All Scopes" }), _jsx(SelectItem, { value: "EMT-B", children: "EMT-Basic" }), _jsx(SelectItem, { value: "AEMT", children: "AEMT" }), _jsx(SelectItem, { value: "Paramedic", children: "Paramedic" })] })] }), _jsxs(Select, { value: categoryFilter, onValueChange: setCategoryFilter, children: [_jsx(SelectTrigger, { className: "w-full sm:w-48", children: _jsx(SelectValue, { placeholder: "All Categories" }) }), _jsxs(SelectContent, { children: [_jsx(SelectItem, { value: "all", children: "All Categories" }), _jsx(SelectItem, { value: "cardiac", children: "Cardiac" }), _jsx(SelectItem, { value: "respiratory", children: "Respiratory" }), _jsx(SelectItem, { value: "neurological", children: "Neurological" }), _jsx(SelectItem, { value: "analgesic", children: "Analgesic" }), _jsx(SelectItem, { value: "gastrointestinal", children: "Gastrointestinal" }), _jsx(SelectItem, { value: "hematological", children: "Hematological" }), _jsx(SelectItem, { value: "toxicology", children: "Toxicology" }), _jsx(SelectItem, { value: "hormonal", children: "Hormonal" }), _jsx(SelectItem, { value: "electrolyte", children: "Electrolyte" }), _jsx(SelectItem, { value: "obstetric", children: "Obstetric" }), _jsx(SelectItem, { value: "diuretic", children: "Diuretic" }), _jsx(SelectItem, { value: "anti-inflammatory", children: "Anti-inflammatory" }), _jsx(SelectItem, { value: "anesthetic", children: "Anesthetic" })] })] })] }) }) }), _jsx("div", { className: "space-y-4", children: isLoading ? (_jsx("div", { className: "text-center py-8", children: "Loading medications..." })) : medications?.length === 0 ? (_jsx(Card, { children: _jsx(CardContent, { className: "p-8 text-center", children: _jsx("div", { className: "text-muted-foreground", children: "No medications found matching your search." }) }) })) : (medications?.map((medication) => (_jsx(Card, { className: "hover:shadow-md transition-shadow", children: _jsx(CardContent, { className: "p-6", children: _jsx("div", { className: "flex items-start justify-between", children: _jsxs("div", { className: "flex-1", children: [_jsxs("div", { className: "flex items-center space-x-3 mb-2", children: [_jsx(Pill, { className: "h-5 w-5 text-primary" }), _jsx("h3", { className: "font-semibold text-xl", children: medication.name }), medication.scope && (_jsx(Badge, { variant: "outline", className: "border-primary text-primary", children: medication.scope })), medication.category && (_jsx(Badge, { className: `${categoryColors[medication.category] || 'bg-gray-500'} text-white`, children: medication.category.toUpperCase() }))] }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-4 mt-4", children: [medication.indications && medication.indications.length > 0 && (_jsxs("div", { children: [_jsxs("h4", { className: "font-medium text-sm text-muted-foreground mb-2 flex items-center", children: [_jsx(Info, { className: "h-4 w-4 mr-1" }), "INDICATIONS"] }), _jsx("ul", { className: "text-sm space-y-1", children: medication.indications.map((indication, index) => (_jsxs("li", { className: "flex items-center", children: [_jsx("span", { className: "w-2 h-2 bg-green-500 rounded-full mr-2" }), indication] }, index))) })] })), medication.contraindications && medication.contraindications.length > 0 && (_jsxs("div", { children: [_jsxs("h4", { className: "font-medium text-sm text-muted-foreground mb-2 flex items-center", children: [_jsx(AlertTriangle, { className: "h-4 w-4 mr-1" }), "CONTRAINDICATIONS"] }), _jsx("ul", { className: "text-sm space-y-1", children: medication.contraindications.map((contraindication, index) => (_jsxs("li", { className: "flex items-center text-red-600", children: [_jsx("span", { className: "w-2 h-2 bg-red-500 rounded-full mr-2" }), contraindication] }, index))) })] }))] }), _jsxs("div", { className: "mt-4 p-4 bg-muted/50 rounded-lg", children: [_jsx("h4", { className: "font-medium text-sm mb-2", children: "DOSAGE INFORMATION" }), _jsxs("div", { className: "grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 text-sm", children: [medication.adultDose && (_jsxs("div", { children: [_jsx("span", { className: "font-medium", children: "Adult:" }), " ", medication.adultDose] })), medication.pediatricDose && (_jsxs("div", { children: [_jsx("span", { className: "font-medium", children: "Pediatric:" }), " ", medication.pediatricDose] })), medication.route && (_jsxs("div", { children: [_jsx("span", { className: "font-medium", children: "Route:" }), " ", medication.route] }))] }), medication.notes && (_jsxs("div", { className: "mt-2 text-sm text-muted-foreground", children: [_jsx("span", { className: "font-medium", children: "Notes:" }), " ", medication.notes] }))] })] }) }) }) }, medication.id)))) })] }));
}
